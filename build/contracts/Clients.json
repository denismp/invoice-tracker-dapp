{
  "contractName": "Clients",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_clientID",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "addClientEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address payable",
          "name": "_address",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_pwd",
          "type": "string"
        }
      ],
      "name": "addUserEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_clientID",
          "type": "string"
        }
      ],
      "name": "duplicateClientEvent",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_pwd",
          "type": "string"
        }
      ],
      "name": "addUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_pwd",
          "type": "string"
        }
      ],
      "name": "calcPassword",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "ePwd",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "clientMap",
      "outputs": [
        {
          "internalType": "address",
          "name": "clientID",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "flag",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "clientNameAddressMap",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "clientNameInvoiceNumMap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "clientNameInvoicesCountMap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "clientNameInvoicesMap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "invoiceNumber",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "netTerms",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "numberHours",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "amount",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "timesheetEndDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "invoiceSentDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "due30DaysDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "due60DaysDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "due90DaysDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "due120DaysDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "datePmtReceived",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        }
      ],
      "name": "getUser",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "ePwd",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getUserAddressByIndex",
      "outputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getUserCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "usercount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        }
      ],
      "name": "getUserName",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_clientName",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_clientID",
          "type": "address"
        }
      ],
      "name": "isNoClient",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_pwd",
          "type": "string"
        }
      ],
      "name": "isPasswordValid",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userClientIDMap",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userToNumClientsMap",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "usersMap",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "ePwd",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "flag",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "usersToClientsMap",
      "outputs": [
        {
          "internalType": "address",
          "name": "clientID",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "flag",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "getClientNameFromMap",
      "outputs": [
        {
          "internalType": "address",
          "name": "clientAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "getClientIDFromIDMap",
      "outputs": [
        {
          "internalType": "address",
          "name": "clientID",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_pwd",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_clientID",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "addClient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_pwd",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "getClientByName",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "clientID",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_pwd",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getClientByIndex",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "clientID",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        }
      ],
      "name": "getClientCount",
      "outputs": [
        {
          "internalType": "int256",
          "name": "count",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_clientID\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"addClientEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address payable\",\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_pwd\",\"type\":\"string\"}],\"name\":\"addUserEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_clientID\",\"type\":\"string\"}],\"name\":\"duplicateClientEvent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_pwd\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_clientID\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"addClient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_pwd\",\"type\":\"string\"}],\"name\":\"addUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_pwd\",\"type\":\"string\"}],\"name\":\"calcPassword\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"ePwd\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"clientMap\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"clientID\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"flag\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"clientNameAddressMap\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"clientNameInvoiceNumMap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"clientNameInvoicesCountMap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"clientNameInvoicesMap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"invoiceNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"netTerms\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numberHours\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"amount\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"timesheetEndDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"invoiceSentDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"due30DaysDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"due60DaysDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"due90DaysDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"due120DaysDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"datePmtReceived\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_pwd\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getClientByIndex\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"clientID\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_pwd\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"getClientByName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"clientID\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"getClientCount\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"count\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getClientIDFromIDMap\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"clientID\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"getClientNameFromMap\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"clientAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"getUser\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"ePwd\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getUserAddressByIndex\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUserCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"usercount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"getUserName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_clientName\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_clientID\",\"type\":\"address\"}],\"name\":\"isNoClient\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_pwd\",\"type\":\"string\"}],\"name\":\"isPasswordValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userClientIDMap\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userToNumClientsMap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"usersMap\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"ePwd\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"flag\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"usersToClientsMap\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"clientID\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"flag\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"addClient(address,string,address,string)\":{\"author\":\"Denis M. Putnam\",\"details\":\"Add's a client to the clientMap and the clientNameAddressMap\",\"params\":{\"_clientID\":\"address of the wallet of the client.\",\"_name\":\"string with the client's name.  This needs to be unique\",\"_pwd\":\"plain text user password\",\"_userAddress\":\"user address\"}},\"addUser(address,string,string)\":{\"author\":\"Denis M. Putnam\",\"details\":\"no other details.\",\"params\":{\"_address\":\"wallet account address for the user\",\"_name\":\"user name\",\"_pwd\":\"unencrypted password\"}},\"calcPassword(string)\":{\"author\":\"Denis M. Putnam\",\"details\":\"no other details.\",\"params\":{\"_pwd\":\"plain text password\"},\"returns\":{\"ePwd\":\"ePwd\"}},\"getClientByIndex(address,string,uint256)\":{\"author\":\"Denis M. Putnam\",\"details\":\"no further info\",\"params\":{\"_index\":\"index of client name\",\"_userAddress\":\"user account address.\"},\"returns\":{\"clientID\":\"clientID\",\"name\":\"name\"}},\"getClientByName(address,string,string)\":{\"author\":\"Denis M. Putnam\",\"details\":\"Get the client for the given name.\",\"params\":{\"_name\":\"client's name\",\"_pwd\":\"plain text password\",\"_userAddress\":\"user address\"},\"returns\":{\"clientID\":\"clientID\",\"name\":\"name\"}},\"getUser(address)\":{\"author\":\"Denis M. Putnam\",\"details\":\"Get the client for the given name.\",\"params\":{\"_userAddress\":\"user address\"},\"returns\":{\"ePwd\":\"ePwd\",\"name\":\"name\"}},\"getUserAddressByIndex(uint256)\":{\"author\":\"Denis M. Putnam\",\"details\":\"no other details.\",\"params\":{\"_index\":\"index of the user\"},\"returns\":{\"_userAddress\":\"_userAddress\"}},\"getUserCount()\":{\"author\":\"Denis M. Putnam\",\"details\":\"no other details.\",\"returns\":{\"usercount\":\"usercount\"}},\"getUserName(address)\":{\"author\":\"Denis M. Putnam\",\"details\":\"Get the client for the given name.\",\"params\":{\"_userAddress\":\"user address\"},\"returns\":{\"name\":\"name\"}},\"isNoClient(address,string,address)\":{\"author\":\"Denis M. Putnam\",\"details\":\"no other details.\",\"params\":{\"_clientID\":\"clients wallet address.\",\"_clientName\":\"name of the client.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{\"addClient(address,string,address,string)\":{\"notice\":\"Add a client to this contract.\"},\"addUser(address,string,string)\":{\"notice\":\"Add a user\"},\"calcPassword(string)\":{\"notice\":\"calculate the encrypted password from the given one\"},\"getClientByIndex(address,string,uint256)\":{\"notice\":\"get the client by index number.\"},\"getClientByName(address,string,string)\":{\"notice\":\"Get the requested client\"},\"getUser(address)\":{\"notice\":\"Get the user name and epassword\"},\"getUserAddressByIndex(uint256)\":{\"notice\":\"Get the user address\"},\"getUserCount()\":{\"notice\":\"Get the count of users.\"},\"getUserName(address)\":{\"notice\":\"Get the user name\"},\"isNoClient(address,string,address)\":{\"notice\":\"Check for no client.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/denisputnam/git/invoice-tracker-dapp/contracts/Clients.sol\":\"Clients\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/denisputnam/git/invoice-tracker-dapp/contracts/Clients.sol\":{\"keccak256\":\"0xa126d3a8ba5780366a6ef0993fe1d754d3541b2acbf35a7aa0122d8bf57b8420\",\"urls\":[\"bzz-raw://3f71f239bc1de26f45132457915f1fcc0bf10fda489d21cb52fcff1fb5a99749\",\"dweb:/ipfs/QmXhwU44CFZHoCtTKG1vP6hZVWALbee66WgxijKQwyTSUK\"]},\"/Users/denisputnam/git/invoice-tracker-dapp/contracts/Password.sol\":{\"keccak256\":\"0x3ea0ae974f073d2b2b898597dfaa075adfbfebe2654391306f821b0bf57415b3\",\"urls\":[\"bzz-raw://7e827908afa03d7414d694ae5f68f7f90f4e34fbb5852cb2eda099119c239533\",\"dweb:/ipfs/QmTQkKfzrbd3tbNySe8D4VGZJ16JgWW7QEXivHVxzfgJpc\"]},\"/Users/denisputnam/git/invoice-tracker-dapp/contracts/Users.sol\":{\"keccak256\":\"0x9486292dbe5a79ba35d44268fde4a333e8124eb9961436deafa3bf67a1cac8a5\",\"urls\":[\"bzz-raw://47cd2546cd336ec1e22d022e3c13c987873098b06b2cb5a1db31fdb21b6c0966\",\"dweb:/ipfs/QmTPET3LcWHeLGyLo5Y51ysARUqM4BZqzEJxMmP3hKyP4g\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x4bd6402ca6b3419008c2b482aff54e66836e8cb4eba2680e42ac5884ae6424fc\",\"urls\":[\"bzz-raw://8f9f711fb8d0d92aeea1c327e3845d13ca1fa8f142e47f8723cd5b3106fb29a3\",\"dweb:/ipfs/QmVQUReDW9f4zGqhizwHnyU8EntMs95tbASdqkGncnikba\"]}},\"version\":1}",
  "bytecode": "0x6080604052600060025560006200001b620000bf60201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350620000c7565b600033905090565b61406c80620000d76000396000f3fe6080604052600436106101815760003560e01c8063b5cb15f7116100d1578063d7554a681161008a578063e281447c11610064578063e281447c14611648578063e331435414611724578063f2fde38b146117b5578063f53642de1461180657610181565b8063d7554a6814611260578063d79fca3d146113df578063d84f55ee1461157e57610181565b8063b5cb15f714610d10578063c29ca72614610d3b578063c77e7a8b14610e43578063c93b840614610ed4578063cca76c5d14610fba578063d41ba10f1461103557610181565b80636f77926b1161013e5780638da5cb5b116101185780638da5cb5b146109da578063a426e2d914610a31578063a69fd72714610a96578063b5b73acb14610b7257610181565b80636f77926b14610773578063715018a6146108445780638353a4ba1461085b57610181565b80630f3aef011461018657806313f0df4d1461028e5780631b3b36b5146103a15780632e7f4514146104a157806336b51324146106325780634be7a6971461070e575b600080fd5b34801561019257600080fd5b5061024c600480360360208110156101a957600080fd5b81019080803590602001906401000000008111156101c657600080fd5b8201836020820111156101d857600080fd5b803590602001918460018302840111640100000000831117156101fa57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611918565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610387600480360360608110156102a457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156102e157600080fd5b8201836020820111156102f357600080fd5b8035906020019184600183028401116401000000008311171561031557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506119ae565b604051808215151515815260200191505060405180910390f35b3480156103ad57600080fd5b50610487600480360360408110156103c457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561040157600080fd5b82018360208201111561041357600080fd5b8035906020019184600183028401116401000000008311171561043557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611b28565b604051808215151515815260200191505060405180910390f35b3480156104ad57600080fd5b50610571600480360360408110156104c457600080fd5b81019080803590602001906401000000008111156104e157600080fd5b8201836020820111156104f357600080fd5b8035906020019184600183028401116401000000008311171561051557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190929190505050611bed565b604051808c81526020018b81526020018a81526020018060200189815260200188815260200187815260200186815260200185815260200184815260200183815260200182810382528a818151815260200191508051906020019080838360005b838110156105ed5780820151818401526020810190506105d2565b50505050905090810190601f16801561061a5780820380516001836020036101000a031916815260200191505b509c5050505050505050505050505060405180910390f35b34801561063e57600080fd5b506106f86004803603602081101561065557600080fd5b810190808035906020019064010000000081111561067257600080fd5b82018360208201111561068457600080fd5b803590602001918460018302840111640100000000831117156106a657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611d0f565b6040518082815260200191505060405180910390f35b34801561071a57600080fd5b5061075d6004803603602081101561073157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d3d565b6040518082815260200191505060405180910390f35b34801561077f57600080fd5b506107c26004803603602081101561079657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d55565b6040518080602001838152602001828103825284818151815260200191508051906020019080838360005b838110156108085780820151818401526020810190506107ed565b50505050905090810190601f1680156108355780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b34801561085057600080fd5b50610859611e83565b005b34801561086757600080fd5b506109216004803603602081101561087e57600080fd5b810190808035906020019064010000000081111561089b57600080fd5b8201836020820111156108ad57600080fd5b803590602001918460018302840111640100000000831117156108cf57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061200b565b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018060200183151515158152602001828103825284818151815260200191508051906020019080838360005b8381101561099d578082015181840152602081019050610982565b50505050905090810190601f1680156109ca5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b3480156109e657600080fd5b506109ef612110565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610a3d57600080fd5b50610a8060048036036020811015610a5457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612139565b6040518082815260200191505060405180910390f35b348015610aa257600080fd5b50610b5c60048036036020811015610ab957600080fd5b8101908080359060200190640100000000811115610ad657600080fd5b820183602082011115610ae857600080fd5b80359060200191846001830284011164010000000083111715610b0a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050612182565b6040518082815260200191505060405180910390f35b348015610b7e57600080fd5b50610c6260048036036060811015610b9557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190640100000000811115610bd257600080fd5b820183602082011115610be457600080fd5b80359060200191846001830284011164010000000083111715610c0657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001909291905050506121fd565b60405180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019080838360005b83811015610cd4578082015181840152602081019050610cb9565b50505050905090810190601f168015610d015780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b348015610d1c57600080fd5b50610d256124d6565b6040518082815260200191505060405180910390f35b348015610d4757600080fd5b50610e0160048036036020811015610d5e57600080fd5b8101908080359060200190640100000000811115610d7b57600080fd5b820183602082011115610d8d57600080fd5b80359060200191846001830284011164010000000083111715610daf57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506125a9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610e4f57600080fd5b50610e9260048036036020811015610e6657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506125f2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610ee057600080fd5b50610fa460048036036040811015610ef757600080fd5b8101908080359060200190640100000000811115610f1457600080fd5b820183602082011115610f2657600080fd5b80359060200191846001830284011164010000000083111715610f4857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190929190505050612625565b6040518082815260200191505060405180910390f35b348015610fc657600080fd5b50610ff360048036036020811015610fdd57600080fd5b8101908080359060200190929190505050612669565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561104157600080fd5b506111b26004803603606081101561105857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561109557600080fd5b8201836020820111156110a757600080fd5b803590602001918460018302840111640100000000831117156110c957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561112c57600080fd5b82018360208201111561113e57600080fd5b8035906020019184600183028401116401000000008311171561116057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061276f565b60405180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019080838360005b83811015611224578082015181840152602081019050611209565b50505050905090810190601f1680156112515780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b34801561126c57600080fd5b506113dd6004803603606081101561128357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156112c057600080fd5b8201836020820111156112d257600080fd5b803590602001918460018302840111640100000000831117156112f457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561135757600080fd5b82018360208201111561136957600080fd5b8035906020019184600183028401116401000000008311171561138b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050612be5565b005b3480156113eb57600080fd5b5061157c6004803603608081101561140257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561143f57600080fd5b82018360208201111561145157600080fd5b8035906020019184600183028401116401000000008311171561147357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156114f657600080fd5b82018360208201111561150857600080fd5b8035906020019184600183028401116401000000008311171561152a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050612f75565b005b34801561158a57600080fd5b506115cd600480360360208110156115a157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613907565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561160d5780820151818401526020810190506115f2565b50505050905090810190601f16801561163a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561165457600080fd5b506116976004803603602081101561166b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506139eb565b604051808060200184815260200183151515158152602001828103825285818151815260200191508051906020019080838360005b838110156116e75780820151818401526020810190506116cc565b50505050905090810190601f1680156117145780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b34801561173057600080fd5b506117736004803603602081101561174757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613aba565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156117c157600080fd5b50611804600480360360208110156117d857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613bec565b005b34801561181257600080fd5b5061185f6004803603604081101561182957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050613df9565b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018060200183151515158152602001828103825284818151815260200191508051906020019080838360005b838110156118db5780820151818401526020810190506118c0565b50505050905090810190601f1680156119085780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b60006008826040518082805190602001908083835b60208310611950578051825260208201915060208101905060208303925061192d565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008173ffffffffffffffffffffffffffffffffffffffff16600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611b1c577f3266e9973cd88d0b427a9f781262c2810cb85378bdc9e4965a3c7aa22977708e8484604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611ad8578082015181840152602081019050611abd565b50505050905090810190601f168015611b055780820380516001836020036101000a031916815260200191505b50935050505060405180910390a160009050611b21565b600190505b9392505050565b600080826040516020018082805190602001908083835b60208310611b625780518252602082019150602081019050602083039250611b3f565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405160208183030381529060405280519060200120905080600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101541491505092915050565b6004828051602081018201805184825260208301602085012081835280955050505050508181548110611c1c57fe5b90600052602060002090600b020160009150915050806000015490806001015490806002015490806003018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611cdb5780601f10611cb057610100808354040283529160200191611cdb565b820191906000526020600020905b815481529060010190602001808311611cbe57829003601f168201915b50505050509080600401549080600501549080600601549080600701549080600801549080600901549080600a015490508b565b6006818051602081018201805184825260208301602085012081835280955050505050506000915090505481565b600b6020528060005260406000206000915090505481565b60606000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154818054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611e735780601f10611e4857610100808354040283529160200191611e73565b820191906000526020600020905b815481529060010190602001808311611e5657829003601f168201915b5050505050915091509150915091565b611e8b613f02565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611f4c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6008818051602081018201805184825260208301602085012081835280955050505050506000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156120f35780601f106120c8576101008083540402835291602001916120f3565b820191906000526020600020905b8154815290600101906020018083116120d657829003601f168201915b5050505050908060020160009054906101000a900460ff16905083565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000816040516020018082805190602001908083835b602083106121bb5780518252602082019150602081019050602083039250612198565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001209050919050565b6060600084846000816040516020018082805190602001908083835b6020831061223c5780518252602082019150602081019050602083039250612219565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405160208183030381529060405280519060200120905080600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015414612330576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f496e76616c69642070617373776f726420676976656e0000000000000000000081525060200191505060405180910390fd5b612338613f0a565b600a60008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020878154811061238257fe5b90600052602060002090600302016040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561248a5780601f1061245f5761010080835404028352916020019161248a565b820191906000526020600020905b81548152906001019060200180831161246d57829003601f168201915b505050505081526020016002820160009054906101000a900460ff1615151515815250509050606081602001519050600082600001519050818197509750505050505050935093915050565b60006124e0613f02565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146125a1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600254905090565b6009818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60076020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600582805160208101820180518482526020830160208501208183528095505050505050818154811061265457fe5b90600052602060002001600091509150505481565b6000612673613f02565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612734576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60606000848360006008826040518082805190602001908083835b602083106127ad578051825260208201915060208101905060208303925061278a565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff16600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612906576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5573657220616e6420636c69656e7420617265206e6f742072656c617465640081525060200191505060405180910390fd5b87876000816040516020018082805190602001908083835b60208310612941578051825260208201915060208101905060208303925061291e565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405160208183030381529060405280519060200120905080600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015414612a35576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f496e76616c69642070617373776f726420676976656e0000000000000000000081525060200191505060405180910390fd5b606060088a6040518082805190602001908083835b60208310612a6d5780518252602082019150602081019050602083039250612a4a565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612b375780601f10612b0c57610100808354040283529160200191612b37565b820191906000526020600020905b815481529060010190602001808311612b1a57829003601f168201915b50505050509050600060088b6040518082805190602001908083835b60208310612b765780518252602082019150602081019050602083039250612b53565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508181995099505050505050505050935093915050565b8260001515600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff16151514612caf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f5573657220616c7265616479206578697374730000000000000000000000000081525060200191505060405180910390fd5b6000826040516020018082805190602001908083835b60208310612ce85780518252602082019150602081019050602083039250612cc5565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001209050604051806060016040528085815260200182815260200160011515815250600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019080519060200190612d9e929190613f43565b506020820151816001015560408201518160020160006101000a81548160ff0219169083151502179055509050508460036000600254815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016002600082825401925050819055507f5ae6671f20b51a868ae522f9841ff46bb92cc988a8f2f502deba9d90b8cd8693858585604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018060200180602001838103835285818151815260200191508051906020019080838360005b83811015612ecb578082015181840152602081019050612eb0565b50505050905090810190601f168015612ef85780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b83811015612f31578082015181840152602081019050612f16565b50505050905090810190601f168015612f5e5780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a15050505050565b838160006008826040518082805190602001908083835b60208310612faf5780518252602082019150602081019050602083039250612f8c565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff16600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614613108576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5573657220616e6420636c69656e7420617265206e6f742072656c617465640081525060200191505060405180910390fd5b86866000816040516020018082805190602001908083835b602083106131435780518252602082019150602081019050602083039250613120565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405160208183030381529060405280519060200120905080600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015414613237576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f496e76616c69642070617373776f726420676976656e0000000000000000000081525060200191505060405180910390fd5b8988886132458382846119ae565b61329a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602881526020018061400f6028913960400191505060405180910390fd5b8a60088b6040518082805190602001908083835b602083106132d157805182526020820191506020810190506020830392506132ae565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508960088b6040518082805190602001908083835b6020831061337c5780518252602082019150602081019050602083039250613359565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060010190805190602001906133c5929190613f43565b50600160088b6040518082805190602001908083835b602083106133fe57805182526020820191506020810190506020830392506133db565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060020160006101000a81548160ff021916908315150217905550600073ffffffffffffffffffffffffffffffffffffffff16600760008f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561355e578a600760008f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b8a60098b6040518082805190602001908083835b602083106135955780518252602082019150602081019050602083039250613572565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508a600760008f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600a60008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180606001604052808d73ffffffffffffffffffffffffffffffffffffffff1681526020018c815260200160011515815250908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019080519060200190613783929190613f43565b5060408201518160020160006101000a81548160ff02191690831515021790555050506001600b60008f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055507f94b9610dbc7bb1121768f2201c6a4b486d3979ecc0c3e84d475a3ace0381903c8d8c8c604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b838110156138bc5780820151818401526020810190506138a1565b50505050905090810190601f1680156138e95780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a150505050505050505050505050565b6060600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156139df5780601f106139b4576101008083540402835291602001916139df565b820191906000526020600020905b8154815290600101906020018083116139c257829003601f168201915b50505050509050919050565b6001602052806000526040600020600091509050806000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015613a975780601f10613a6c57610100808354040283529160200191613a97565b820191906000526020600020905b815481529060010190602001808311613a7a57829003601f168201915b5050505050908060010154908060020160009054906101000a900460ff16905083565b6000613ac4613f02565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614613b85576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b613bf4613f02565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614613cb5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415613d3b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180613fe96026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600a6020528160005260406000208181548110613e1257fe5b9060005260206000209060030201600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015613ee55780601f10613eba57610100808354040283529160200191613ee5565b820191906000526020600020905b815481529060010190602001808311613ec857829003601f168201915b5050505050908060020160009054906101000a900460ff16905083565b600033905090565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001606081526020016000151581525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10613f8457805160ff1916838001178555613fb2565b82800160010185558215613fb2579182015b82811115613fb1578251825591602001919060010190613f96565b5b509050613fbf9190613fc3565b5090565b613fe591905b80821115613fe1576000816000905550600101613fc9565b5090565b9056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373436c69656e7420616c72656164792065786973747320666f722074686520676976656e2075736572a264697066735822122044f55ed4ac5687cabec21be1610f34d8e0c7b1aa9f4a3dbf3f1c5d8084957e5f64736f6c63430006060033",
  "deployedBytecode": "0x6080604052600436106101815760003560e01c8063b5cb15f7116100d1578063d7554a681161008a578063e281447c11610064578063e281447c14611648578063e331435414611724578063f2fde38b146117b5578063f53642de1461180657610181565b8063d7554a6814611260578063d79fca3d146113df578063d84f55ee1461157e57610181565b8063b5cb15f714610d10578063c29ca72614610d3b578063c77e7a8b14610e43578063c93b840614610ed4578063cca76c5d14610fba578063d41ba10f1461103557610181565b80636f77926b1161013e5780638da5cb5b116101185780638da5cb5b146109da578063a426e2d914610a31578063a69fd72714610a96578063b5b73acb14610b7257610181565b80636f77926b14610773578063715018a6146108445780638353a4ba1461085b57610181565b80630f3aef011461018657806313f0df4d1461028e5780631b3b36b5146103a15780632e7f4514146104a157806336b51324146106325780634be7a6971461070e575b600080fd5b34801561019257600080fd5b5061024c600480360360208110156101a957600080fd5b81019080803590602001906401000000008111156101c657600080fd5b8201836020820111156101d857600080fd5b803590602001918460018302840111640100000000831117156101fa57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611918565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610387600480360360608110156102a457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156102e157600080fd5b8201836020820111156102f357600080fd5b8035906020019184600183028401116401000000008311171561031557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506119ae565b604051808215151515815260200191505060405180910390f35b3480156103ad57600080fd5b50610487600480360360408110156103c457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561040157600080fd5b82018360208201111561041357600080fd5b8035906020019184600183028401116401000000008311171561043557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611b28565b604051808215151515815260200191505060405180910390f35b3480156104ad57600080fd5b50610571600480360360408110156104c457600080fd5b81019080803590602001906401000000008111156104e157600080fd5b8201836020820111156104f357600080fd5b8035906020019184600183028401116401000000008311171561051557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190929190505050611bed565b604051808c81526020018b81526020018a81526020018060200189815260200188815260200187815260200186815260200185815260200184815260200183815260200182810382528a818151815260200191508051906020019080838360005b838110156105ed5780820151818401526020810190506105d2565b50505050905090810190601f16801561061a5780820380516001836020036101000a031916815260200191505b509c5050505050505050505050505060405180910390f35b34801561063e57600080fd5b506106f86004803603602081101561065557600080fd5b810190808035906020019064010000000081111561067257600080fd5b82018360208201111561068457600080fd5b803590602001918460018302840111640100000000831117156106a657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611d0f565b6040518082815260200191505060405180910390f35b34801561071a57600080fd5b5061075d6004803603602081101561073157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d3d565b6040518082815260200191505060405180910390f35b34801561077f57600080fd5b506107c26004803603602081101561079657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d55565b6040518080602001838152602001828103825284818151815260200191508051906020019080838360005b838110156108085780820151818401526020810190506107ed565b50505050905090810190601f1680156108355780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b34801561085057600080fd5b50610859611e83565b005b34801561086757600080fd5b506109216004803603602081101561087e57600080fd5b810190808035906020019064010000000081111561089b57600080fd5b8201836020820111156108ad57600080fd5b803590602001918460018302840111640100000000831117156108cf57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061200b565b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018060200183151515158152602001828103825284818151815260200191508051906020019080838360005b8381101561099d578082015181840152602081019050610982565b50505050905090810190601f1680156109ca5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b3480156109e657600080fd5b506109ef612110565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610a3d57600080fd5b50610a8060048036036020811015610a5457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612139565b6040518082815260200191505060405180910390f35b348015610aa257600080fd5b50610b5c60048036036020811015610ab957600080fd5b8101908080359060200190640100000000811115610ad657600080fd5b820183602082011115610ae857600080fd5b80359060200191846001830284011164010000000083111715610b0a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050612182565b6040518082815260200191505060405180910390f35b348015610b7e57600080fd5b50610c6260048036036060811015610b9557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190640100000000811115610bd257600080fd5b820183602082011115610be457600080fd5b80359060200191846001830284011164010000000083111715610c0657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001909291905050506121fd565b60405180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019080838360005b83811015610cd4578082015181840152602081019050610cb9565b50505050905090810190601f168015610d015780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b348015610d1c57600080fd5b50610d256124d6565b6040518082815260200191505060405180910390f35b348015610d4757600080fd5b50610e0160048036036020811015610d5e57600080fd5b8101908080359060200190640100000000811115610d7b57600080fd5b820183602082011115610d8d57600080fd5b80359060200191846001830284011164010000000083111715610daf57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506125a9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610e4f57600080fd5b50610e9260048036036020811015610e6657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506125f2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610ee057600080fd5b50610fa460048036036040811015610ef757600080fd5b8101908080359060200190640100000000811115610f1457600080fd5b820183602082011115610f2657600080fd5b80359060200191846001830284011164010000000083111715610f4857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190929190505050612625565b6040518082815260200191505060405180910390f35b348015610fc657600080fd5b50610ff360048036036020811015610fdd57600080fd5b8101908080359060200190929190505050612669565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561104157600080fd5b506111b26004803603606081101561105857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561109557600080fd5b8201836020820111156110a757600080fd5b803590602001918460018302840111640100000000831117156110c957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561112c57600080fd5b82018360208201111561113e57600080fd5b8035906020019184600183028401116401000000008311171561116057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061276f565b60405180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019080838360005b83811015611224578082015181840152602081019050611209565b50505050905090810190601f1680156112515780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b34801561126c57600080fd5b506113dd6004803603606081101561128357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156112c057600080fd5b8201836020820111156112d257600080fd5b803590602001918460018302840111640100000000831117156112f457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561135757600080fd5b82018360208201111561136957600080fd5b8035906020019184600183028401116401000000008311171561138b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050612be5565b005b3480156113eb57600080fd5b5061157c6004803603608081101561140257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561143f57600080fd5b82018360208201111561145157600080fd5b8035906020019184600183028401116401000000008311171561147357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156114f657600080fd5b82018360208201111561150857600080fd5b8035906020019184600183028401116401000000008311171561152a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050612f75565b005b34801561158a57600080fd5b506115cd600480360360208110156115a157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613907565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561160d5780820151818401526020810190506115f2565b50505050905090810190601f16801561163a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561165457600080fd5b506116976004803603602081101561166b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506139eb565b604051808060200184815260200183151515158152602001828103825285818151815260200191508051906020019080838360005b838110156116e75780820151818401526020810190506116cc565b50505050905090810190601f1680156117145780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b34801561173057600080fd5b506117736004803603602081101561174757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613aba565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156117c157600080fd5b50611804600480360360208110156117d857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613bec565b005b34801561181257600080fd5b5061185f6004803603604081101561182957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050613df9565b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018060200183151515158152602001828103825284818151815260200191508051906020019080838360005b838110156118db5780820151818401526020810190506118c0565b50505050905090810190601f1680156119085780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b60006008826040518082805190602001908083835b60208310611950578051825260208201915060208101905060208303925061192d565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008173ffffffffffffffffffffffffffffffffffffffff16600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611b1c577f3266e9973cd88d0b427a9f781262c2810cb85378bdc9e4965a3c7aa22977708e8484604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611ad8578082015181840152602081019050611abd565b50505050905090810190601f168015611b055780820380516001836020036101000a031916815260200191505b50935050505060405180910390a160009050611b21565b600190505b9392505050565b600080826040516020018082805190602001908083835b60208310611b625780518252602082019150602081019050602083039250611b3f565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405160208183030381529060405280519060200120905080600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101541491505092915050565b6004828051602081018201805184825260208301602085012081835280955050505050508181548110611c1c57fe5b90600052602060002090600b020160009150915050806000015490806001015490806002015490806003018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611cdb5780601f10611cb057610100808354040283529160200191611cdb565b820191906000526020600020905b815481529060010190602001808311611cbe57829003601f168201915b50505050509080600401549080600501549080600601549080600701549080600801549080600901549080600a015490508b565b6006818051602081018201805184825260208301602085012081835280955050505050506000915090505481565b600b6020528060005260406000206000915090505481565b60606000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154818054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611e735780601f10611e4857610100808354040283529160200191611e73565b820191906000526020600020905b815481529060010190602001808311611e5657829003601f168201915b5050505050915091509150915091565b611e8b613f02565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611f4c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6008818051602081018201805184825260208301602085012081835280955050505050506000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156120f35780601f106120c8576101008083540402835291602001916120f3565b820191906000526020600020905b8154815290600101906020018083116120d657829003601f168201915b5050505050908060020160009054906101000a900460ff16905083565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000816040516020018082805190602001908083835b602083106121bb5780518252602082019150602081019050602083039250612198565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001209050919050565b6060600084846000816040516020018082805190602001908083835b6020831061223c5780518252602082019150602081019050602083039250612219565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405160208183030381529060405280519060200120905080600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015414612330576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f496e76616c69642070617373776f726420676976656e0000000000000000000081525060200191505060405180910390fd5b612338613f0a565b600a60008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020878154811061238257fe5b90600052602060002090600302016040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561248a5780601f1061245f5761010080835404028352916020019161248a565b820191906000526020600020905b81548152906001019060200180831161246d57829003601f168201915b505050505081526020016002820160009054906101000a900460ff1615151515815250509050606081602001519050600082600001519050818197509750505050505050935093915050565b60006124e0613f02565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146125a1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600254905090565b6009818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60076020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600582805160208101820180518482526020830160208501208183528095505050505050818154811061265457fe5b90600052602060002001600091509150505481565b6000612673613f02565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612734576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60606000848360006008826040518082805190602001908083835b602083106127ad578051825260208201915060208101905060208303925061278a565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff16600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612906576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5573657220616e6420636c69656e7420617265206e6f742072656c617465640081525060200191505060405180910390fd5b87876000816040516020018082805190602001908083835b60208310612941578051825260208201915060208101905060208303925061291e565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405160208183030381529060405280519060200120905080600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015414612a35576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f496e76616c69642070617373776f726420676976656e0000000000000000000081525060200191505060405180910390fd5b606060088a6040518082805190602001908083835b60208310612a6d5780518252602082019150602081019050602083039250612a4a565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612b375780601f10612b0c57610100808354040283529160200191612b37565b820191906000526020600020905b815481529060010190602001808311612b1a57829003601f168201915b50505050509050600060088b6040518082805190602001908083835b60208310612b765780518252602082019150602081019050602083039250612b53565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508181995099505050505050505050935093915050565b8260001515600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff16151514612caf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f5573657220616c7265616479206578697374730000000000000000000000000081525060200191505060405180910390fd5b6000826040516020018082805190602001908083835b60208310612ce85780518252602082019150602081019050602083039250612cc5565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001209050604051806060016040528085815260200182815260200160011515815250600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019080519060200190612d9e929190613f43565b506020820151816001015560408201518160020160006101000a81548160ff0219169083151502179055509050508460036000600254815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016002600082825401925050819055507f5ae6671f20b51a868ae522f9841ff46bb92cc988a8f2f502deba9d90b8cd8693858585604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018060200180602001838103835285818151815260200191508051906020019080838360005b83811015612ecb578082015181840152602081019050612eb0565b50505050905090810190601f168015612ef85780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b83811015612f31578082015181840152602081019050612f16565b50505050905090810190601f168015612f5e5780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a15050505050565b838160006008826040518082805190602001908083835b60208310612faf5780518252602082019150602081019050602083039250612f8c565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff16600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614613108576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5573657220616e6420636c69656e7420617265206e6f742072656c617465640081525060200191505060405180910390fd5b86866000816040516020018082805190602001908083835b602083106131435780518252602082019150602081019050602083039250613120565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405160208183030381529060405280519060200120905080600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015414613237576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f496e76616c69642070617373776f726420676976656e0000000000000000000081525060200191505060405180910390fd5b8988886132458382846119ae565b61329a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602881526020018061400f6028913960400191505060405180910390fd5b8a60088b6040518082805190602001908083835b602083106132d157805182526020820191506020810190506020830392506132ae565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508960088b6040518082805190602001908083835b6020831061337c5780518252602082019150602081019050602083039250613359565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060010190805190602001906133c5929190613f43565b50600160088b6040518082805190602001908083835b602083106133fe57805182526020820191506020810190506020830392506133db565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060020160006101000a81548160ff021916908315150217905550600073ffffffffffffffffffffffffffffffffffffffff16600760008f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561355e578a600760008f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b8a60098b6040518082805190602001908083835b602083106135955780518252602082019150602081019050602083039250613572565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508a600760008f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600a60008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180606001604052808d73ffffffffffffffffffffffffffffffffffffffff1681526020018c815260200160011515815250908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019080519060200190613783929190613f43565b5060408201518160020160006101000a81548160ff02191690831515021790555050506001600b60008f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055507f94b9610dbc7bb1121768f2201c6a4b486d3979ecc0c3e84d475a3ace0381903c8d8c8c604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b838110156138bc5780820151818401526020810190506138a1565b50505050905090810190601f1680156138e95780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a150505050505050505050505050565b6060600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156139df5780601f106139b4576101008083540402835291602001916139df565b820191906000526020600020905b8154815290600101906020018083116139c257829003601f168201915b50505050509050919050565b6001602052806000526040600020600091509050806000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015613a975780601f10613a6c57610100808354040283529160200191613a97565b820191906000526020600020905b815481529060010190602001808311613a7a57829003601f168201915b5050505050908060010154908060020160009054906101000a900460ff16905083565b6000613ac4613f02565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614613b85576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b613bf4613f02565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614613cb5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415613d3b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180613fe96026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600a6020528160005260406000208181548110613e1257fe5b9060005260206000209060030201600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015613ee55780601f10613eba57610100808354040283529160200191613ee5565b820191906000526020600020905b815481529060010190602001808311613ec857829003601f168201915b5050505050908060020160009054906101000a900460ff16905083565b600033905090565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001606081526020016000151581525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10613f8457805160ff1916838001178555613fb2565b82800160010185558215613fb2579182015b82811115613fb1578251825591602001919060010190613f96565b5b509050613fbf9190613fc3565b5090565b613fe591905b80821115613fe1576000816000905550600101613fc9565b5090565b9056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373436c69656e7420616c72656164792065786973747320666f722074686520676976656e2075736572a264697066735822122044f55ed4ac5687cabec21be1610f34d8e0c7b1aa9f4a3dbf3f1c5d8084957e5f64736f6c63430006060033",
  "immutableReferences": {},
  "sourceMap": "84:3502:0:-:0;;;1113:1:4;1093:21;;865:17:7;885:12;:10;;;:12;;:::i;:::-;865:32;;916:9;907:6;;:18;;;;;;;;;;;;;;;;;;973:9;940:43;;969:1;940:43;;;;;;;;;;;;831:159;84:3502:0;;590:104:6;643:15;677:10;670:17;;590:104;:::o;84:3502:0:-;;;;;;;",
  "deployedSourceMap": "84:3502:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;199:170:0;;5:9:-1;2:2;;;27:1;24;17:12;2:2;199:170:0;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;199:170:0;;;;;;;;;;27:11:-1;14;11:28;8:2;;;52:1;49;42:12;8:2;199:170:0;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;199:170:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;199:170:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;199:170:0;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2813:336:4;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;2813:336:4;;;;;;;;;;;;;;;;;;;;;27:11:-1;14;11:28;8:2;;;52:1;49;42:12;8:2;2813:336:4;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;2813:336:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2813:336:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2813:336:4;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3725:241;;5:9:-1;2:2;;;27:1;24;17:12;2:2;3725:241:4;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;3725:241:4;;;;;;;;;;;;;;;;;;;;;27:11:-1;14;11:28;8:2;;;52:1;49;42:12;8:2;3725:241:4;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;3725:241:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3725:241:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3725:241:4;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1301:57;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1301:57:4;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1301:57:4;;;;;;;;;;27:11:-1;14;11:28;8:2;;;52:1;49;42:12;8:2;1301:57:4;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;1301:57:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1301:57:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1301:57:4;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1301:57:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1546:60;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1546:60:4;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1546:60:4;;;;;;;;;;27:11:-1;14;11:28;8:2;;;52:1;49;42:12;8:2;1546:60:4;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;1546:60:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1546:60:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1546:60:4;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2120:53;;5:9:-1;2:2;;;27:1;24;17:12;2:2;2120:53:4;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;2120:53:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1416:204:5;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1416:204:5;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1416:204:5;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1416:204:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1689:145:7;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1689:145:7;;;:::i;:::-;;1780:42:4;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1780:42:4;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1780:42:4;;;;;;;;;;27:11:-1;14;11:28;8:2;;;52:1;49;42:12;8:2;1780:42:4;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;1780:42:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1780:42:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1780:42:4;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1780:42:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1066:77:7;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1066:77:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3377:207:0;;5:9:-1;2:2;;;27:1;24;17:12;2:2;3377:207:0;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;3377:207:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4164:162:4;;5:9:-1;2:2;;;27:1;24;17:12;2:2;4164:162:4;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;4164:162:4;;;;;;;;;;27:11:-1;14;11:28;8:2;;;52:1;49;42:12;8:2;4164:162:4;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;4164:162:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4164:162:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4164:162:4;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2887:484:0;;5:9:-1;2:2;;;27:1;24;17:12;2:2;2887:484:0;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;2887:484:0;;;;;;;;;;;;;;;;;;;;;27:11:-1;14;11:28;8:2;;;52:1;49;42:12;8:2;2887:484:0;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;2887:484:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2887:484:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2887:484:0;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2887:484:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1755:145:5;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1755:145:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1890:54:4;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1890:54:4;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1890:54:4;;;;;;;;;;27:11:-1;14;11:28;8:2;;;52:1;49;42:12;8:2;1890:54:4;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;1890:54:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1890:54:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1890:54:4;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1663:50;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1663:50:4;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1663:50:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1421:59;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1421:59:4;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1421:59:4;;;;;;;;;;27:11:-1;14;11:28;8:2;;;52:1;49;42:12;8:2;1421:59:4;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;1421:59:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1421:59:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1421:59:4;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2075:184:5;;5:9:-1;2:2;;;27:1;24;17:12;2:2;2075:184:5;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;2075:184:5;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2162:471:0;;5:9:-1;2:2;;;27:1;24;17:12;2:2;2162:471:0;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;2162:471:0;;;;;;;;;;;;;;;;;;;;;27:11:-1;14;11:28;8:2;;;52:1;49;42:12;8:2;2162:471:0;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;2162:471:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2162:471:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2162:471:0;;;;;;;;;;;;;;;;;27:11:-1;14;11:28;8:2;;;52:1;49;42:12;8:2;2162:471:0;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;2162:471:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2162:471:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2162:471:0;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2162:471:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;476:378:5;;5:9:-1;2:2;;;27:1;24;17:12;2:2;476:378:5;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;476:378:5;;;;;;;;;;;;;;;;;;;;;27:11:-1;14;11:28;8:2;;;52:1;49;42:12;8:2;476:378:5;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;476:378:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;476:378:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;476:378:5;;;;;;;;;;;;;;;;;27:11:-1;14;11:28;8:2;;;52:1;49;42:12;8:2;476:378:5;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;476:378:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;476:378:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;476:378:5;;;;;;;;;;;;;;;:::i;:::-;;949:924:0;;5:9:-1;2:2;;;27:1;24;17:12;2:2;949:924:0;;;;;;15:3:-1;10;7:12;4:2;;;32:1;29;22:12;4:2;949:924:0;;;;;;;;;;;;;;;;;;;;;27:11:-1;14;11:28;8:2;;;52:1;49;42:12;8:2;949:924:0;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;949:924:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;949:924:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;949:924:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:11:-1;14;11:28;8:2;;;52:1;49;42:12;8:2;949:924:0;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;949:924:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;949:924:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;949:924:0;;;;;;;;;;;;;;;:::i;:::-;;1036:163:5;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1036:163:5;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1036:163:5;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1036:163:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1023:40:4;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1023:40:4;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1023:40:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1023:40:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;375:190:0;;5:9:-1;2:2;;;27:1;24;17:12;2:2;375:190:0;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;375:190:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1983:240:7;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1983:240:7;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1983:240:7;;;;;;;;;;;;;;;;;;;:::i;:::-;;1997:53:4;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1997:53:4;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1997:53:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1997:53:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;199:170:0;294:21;338:9;348:4;338:15;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;338:15:0;;;;;;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;331:31;;199:170;;;:::o;2813:336:4:-;2955:4;3008:9;2975:42;;:15;:29;2991:12;2975:29;;;;;;;;;;;;;;;;;;;;;;;;;:42;;;2971:151;;;3038:47;3059:12;3073:11;3038:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3038:47:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3106:5;3099:12;;;;2971:151;3138:4;3131:11;;2813:336;;;;;;:::o;3725:241::-;3837:4;3857:12;3899:4;3882:22;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3882:22:4;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3882:22:4;;;3872:33;;;;;;3857:48;;3954:4;3923:8;:22;3932:12;3923:22;;;;;;;;;;;;;;;:27;;;:35;3915:44;;;3725:241;;;;:::o;1301:57::-;;;28:7:-1;22:14;169:4;160:7;156:18;147:7;143:32;204:13;198:20;246:8;231:13;224:31;316:4;307:7;303:18;296:4;287:7;283:18;273:49;350:9;335:13;328:32;378:4;366:16;;0:388;;;;1301:57:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1546:60::-;;;28:7:-1;22:14;169:4;160:7;156:18;147:7;143:32;204:13;198:20;246:8;231:13;224:31;316:4;307:7;303:18;296:4;287:7;283:18;273:49;350:9;335:13;328:32;378:4;366:16;;0:388;;;;1546:60:4;;;;;;;;:::o;2120:53::-;;;;;;;;;;;;;;;;;:::o;1416:204:5:-;1500:18;1520:12;1556:8;:22;1565:12;1556:22;;;;;;;;;;;;;;;:27;;1585:8;:22;1594:12;1585:22;;;;;;;;;;;;;;;:27;;;1548:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1416:204;;;:::o;1689:145:7:-;1280:12;:10;:12::i;:::-;1270:22;;:6;;;;;;;;;;;:22;;;1262:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1795:1:::1;1758:40;;1779:6;::::0;::::1;;;;;;;;;1758:40;;;;;;;;;;;;1825:1;1808:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1689:145::o:0;1780:42:4:-;;;28:7:-1;22:14;169:4;160:7;156:18;147:7;143:32;204:13;198:20;246:8;231:13;224:31;316:4;307:7;303:18;296:4;287:7;283:18;273:49;350:9;335:13;328:32;378:4;366:16;;0:388;;;;1780:42:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1066:77:7:-;1104:7;1130:6;;;;;;;;;;;1123:13;;1066:77;:::o;3377:207:0:-;3468:12;3544:19;:33;3564:12;3544:33;;;;;;;;;;;;;;;;3537:40;;3377:207;;;:::o;4164:162:4:-;4251:12;4313:4;4296:22;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;4296:22:4;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4296:22:4;;;4286:33;;;;;;4279:40;;4164:162;;;:::o;2887:484:0:-;3103:18;3135:16;3053:12;3067:4;2257:12:4;2299:4;2282:22;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2282:22:4;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2282:22:4;;;2272:33;;;;;;2257:48;;2354:4;2323:8;:22;2332:12;2323:22;;;;;;;;;;;;;;;:27;;;:35;2315:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3176:21:0::1;;:::i;:::-;3200:17;:31;3218:12;3200:31;;;;;;;;;;;;;;;3232:6;3200:39;;;;;;;;;;;;;;;;;;3176:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;3249:19;3271:7;:12;;;3249:34;;3293:17;3313:7;:16;;;3293:36;;3347:5;3354:9;3339:25;;;;;;;2887:484:::0;;;;;;;;;:::o;1755:145:5:-;1844:17;1280:12:7;:10;:12::i;:::-;1270:22;;:6;;;;;;;;;;;:22;;;1262:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1884:9:5::1;;1877:16;;1755:145:::0;:::o;1890:54:4:-;;;28:7:-1;22:14;169:4;160:7;156:18;147:7;143:32;204:13;198:20;246:8;231:13;224:31;316:4;307:7;303:18;296:4;287:7;283:18;273:49;350:9;335:13;328:32;378:4;366:16;;0:388;;;;1890:54:4;;;;;;;;;;;;;:::o;1663:50::-;;;;;;;;;;;;;;;;;;;;;;:::o;1421:59::-;;;28:7:-1;22:14;169:4;160:7;156:18;147:7;143:32;204:13;198:20;246:8;231:13;224:31;316:4;307:7;303:18;296:4;287:7;283:18;273:49;350:9;335:13;328:32;378:4;366:16;;0:388;;;;1421:59:4;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2075:184:5:-;2187:20;1280:12:7;:10;:12::i;:::-;1270:22;;:6;;;;;;;;;;;:22;;;1262:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2231:12:5::1;:20;2244:6;2231:20;;;;;;;;;;;;;;;;;;;;;2223:29;;2075:184:::0;;;:::o;2162:471:0:-;2420:18;2452:16;2325:12;2339:5;3520:17:4;3540:9;3550:11;3540:22;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3540:22:4;;;;;;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;3520:51;;3635:9;3602:42;;:15;:29;3618:12;3602:29;;;;;;;;;;;;;;;;;;;;;;;;;:42;;;3581:120;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2370:12:0::1;2384:4;2257:12:4;2299:4;2282:22;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2282:22:4;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2282:22:4;;;2272:33;;;;;;2257:48;;2354:4;2323:8;:22;2332:12;2323:22;;;;;;;;;;;;;;;:27;;;:35;2315:70;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;2493:19:0::2;2515:9;2525:5;2515:16;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2515:16:0;;;;;;;;;;;;;;;;;;;;;:21;;2493:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2546:17;2566:9;2576:5;2566:16;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2566:16:0;;;;;;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;2546:45;;2609:5;2616:9;2601:25;;;;;;3711:1:4::1;;;2162:471:0::0;;;;;;;;;:::o;476:378:5:-;607:8;2491:5:4;2464:32;;:8;:18;2473:8;2464:18;;;;;;;;;;;;;;;:23;;;;;;;;;;;;:32;;;2456:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;627:12:5::1;669:4;652:22;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;652:22:5;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;652:22:5;;;642:33;;;;;;627:48;;706:23;;;;;;;;711:5;706:23;;;;718:4;706:23;;;;724:4;706:23;;;;::::0;685:8:::1;:18;694:8;685:18;;;;;;;;;;;;;;;:44;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;765:8;739:12;:23;752:9;;739:23;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;796:1;783:9;;:14;;;;;;;;;;;812:35;825:8;835:5;842:4;812:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;812:35:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;812:35:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2530:1:4;476:378:5::0;;;;:::o;949:924:0:-;1120:12;1134:5;3520:17:4;3540:9;3550:11;3540:22;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3540:22:4;;;;;;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;3520:51;;3635:9;3602:42;;:15;:29;3618:12;3602:29;;;;;;;;;;;;;;;;;;;;;;;;;:42;;;3581:120;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1165:12:0::1;1179:4;2257:12:4;2299:4;2282:22;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2282:22:4;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2282:22:4;;;2272:33;;;;;;2257:48;;2354:4;2323:8;:22;2332:12;2323:22;;;;;;;;;;;;;;;:27;;;:35;2315:70;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;1205:12:0::2;1219:9;1230:5;3305:48:4;3316:12;3330:11;3343:9;3305:10;:48::i;:::-;3284:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1279:9:0::3;1251;1261:5;1251:16;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1251:16:0;;;;;;;;;;;;;;;;;;;;;:25;;;:37;;;;;;;;;;;;;;;;;;1322:5;1298:9;1308:5;1298:16;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1298:16:0;;;;;;;;;;;;;;;;;;;;;:21;;:29;;;;;;;;;;;;:::i;:::-;;1361:4;1337:9;1347:5;1337:16;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1337:16:0;;;;;;;;;;;;;;;;;;;;;:21;;;:28;;;;;;;;;;;;;;;;;;1461:3;1420:45;;:15;:29;1436:12;1420:29;;;;;;;;;;;;;;;;;;;;;;;;;:45;;;1416:115;;;1511:9;1479:15;:29;1495:12;1479:29;;;;;;;;;;;;;;;;:41;;;;;;;;;;;;;;;;;;1416:115;1571:9;1541:20;1562:5;1541:27;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1541:27:0;;;;;;;;;;;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;1670:9;1638:15;:29;1654:12;1638:29;;;;;;;;;;;;;;;;:41;;;;;;;;;;;;;;;;;;1689:17;:31;1707:12;1689:31;;;;;;;;;;;;;;;1726:30;;;;;;;;1733:9;1726:30;;;;;;1744:5;1726:30;;;;1751:4;1726:30;;;;::::0;1689:68:::3;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1689:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1804:1;1767:19;:33;1787:12;1767:33;;;;;;;;;;;;;;;;:38;;;;;;;;;;;1820:46;1835:12;1849:9;1860:5;1820:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1820:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2395:1:4::2;;;3711::::1;;;949:924:0::0;;;;;;;:::o;1036:163:5:-;1124:18;1165:8;:22;1174:12;1165:22;;;;;;;;;;;;;;;:27;;1158:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1036:163;;;:::o;1023:40:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;375:190:0:-;491:16;1280:12:7;:10;:12::i;:::-;1270:22;;:6;;;;;;;;;;;:22;;;1262:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;530:15:0::1;:28;546:11;530:28;;;;;;;;;;;;;;;;;;;;;;;;;523:35;;375:190:::0;;;:::o;1983:240:7:-;1280:12;:10;:12::i;:::-;1270:22;;:6;;;;;;;;;;;:22;;;1262:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2091:1:::1;2071:22;;:8;:22;;;;2063:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2180:8;2151:38;;2172:6;::::0;::::1;;;;;;;;;2151:38;;;;;;;;;;;;2208:8;2199:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;1983:240:::0;:::o;1997:53:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;590:104:6:-;643:15;677:10;670:17;;590:104;:::o;84:3502:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.6.6;\n\nimport \"./Users.sol\";\n\ncontract Clients is Users {\n\n    event addClientEvent(address _userAddress, address _clientID, string _name);\n\n    function getClientNameFromMap(string memory name)\n        public\n        view\n        returns (address clientAddress)\n    {\n        return clientMap[name].clientID;\n    }\n\n    function getClientIDFromIDMap(address userAddress)\n        public\n        view\n        onlyOwner()\n        returns (address clientID)\n    {\n        return userClientIDMap[userAddress];\n    }\n\n    /// @author Denis M. Putnam\n    /// @notice Add a client to this contract.\n    /// @param _userAddress user address\n    /// @param _pwd plain text user password\n    /// @param _clientID address of the wallet of the client.\n    /// @param _name string with the client's name.  This needs to be unique\n    /// @dev Add's a client to the clientMap and the clientNameAddressMap\n    function addClient(\n        address _userAddress,\n        string memory _pwd,\n        address _clientID,\n        string memory _name\n    )\n        public\n        userOnly(_userAddress, _name)\n        isValidPassword(_userAddress, _pwd)\n        noDupClient(_userAddress, _clientID, _name)\n    {\n        clientMap[_name].clientID = _clientID;\n        clientMap[_name].name = _name;\n        clientMap[_name].flag = true;\n\n        // clientNameArray.push(_name);\n        if (userClientIDMap[_userAddress] == address(0x0)) {\n          userClientIDMap[_userAddress] = _clientID;\n        }\n\n        clientNameAddressMap[_name] = _clientID;\n        //clientNameInvoiceCountMap[_name] = 0;\n        userClientIDMap[_userAddress] = _clientID;\n        usersToClientsMap[_userAddress].push(Client(_clientID, _name, true));\n        userToNumClientsMap[_userAddress] += 1;\n        emit addClientEvent(_userAddress, _clientID, _name);\n    }\n\n    /// @author Denis M. Putnam\n    /// @notice Get the requested client\n    /// @param _userAddress user address\n    /// @param _pwd plain text password\n    /// @param _name client's name\n    /// @dev Get the client for the given name.\n    /// @return name\n    /// @return clientID\n    function getClientByName(\n        address _userAddress,\n        string memory _pwd,\n        string memory _name\n    )\n        public\n        view\n        userOnly(_userAddress, _name)\n        isValidPassword(_userAddress, _pwd)\n        returns (\n            string memory name,\n            address clientID\n        )\n    {\n        string memory lname = clientMap[_name].name;\n        address lclientID = clientMap[_name].clientID;\n        return (lname, lclientID);\n    }\n\n    /// @author Denis M. Putnam\n    /// @notice get the client by index number.\n    /// @param _userAddress user account address.\n    /// @param _index index of client name\n    /// @dev no further info\n    /// @return name\n    /// @return clientID\n    function getClientByIndex(\n        address _userAddress,\n        string memory _pwd,\n        uint256 _index\n    )\n        public\n        view\n        isValidPassword(_userAddress, _pwd)\n        returns (\n            string memory name,\n            address clientID\n        )\n    {\n        Client memory _client = usersToClientsMap[_userAddress][_index];\n        string memory lname = _client.name;\n        address lclientID = _client.clientID;\n        return (lname, lclientID);\n    }\n\n    function getClientCount(address _userAddress)\n        public\n        view\n        returns (int256 count)\n    {\n        //return clientNameArray.length;\n        return userToNumClientsMap[_userAddress];\n    }\n}\n",
  "sourcePath": "/Users/denisputnam/git/invoice-tracker-dapp/contracts/Clients.sol",
  "ast": {
    "absolutePath": "/Users/denisputnam/git/invoice-tracker-dapp/contracts/Clients.sol",
    "exportedSymbols": {
      "Clients": [
        232
      ]
    },
    "id": 233,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:23:0"
      },
      {
        "absolutePath": "/Users/denisputnam/git/invoice-tracker-dapp/contracts/Users.sol",
        "file": "./Users.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 233,
        "sourceUnit": 1416,
        "src": "61:21:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "Users",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1415,
              "src": "104:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Users_$1415",
                "typeString": "contract Users"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "104:5:0"
          }
        ],
        "contractDependencies": [
          1290,
          1415,
          1438,
          1547
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 232,
        "linearizedBaseContracts": [
          232,
          1415,
          1290,
          1547,
          1438
        ],
        "name": "Clients",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 12,
            "name": "addClientEvent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_userAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12,
                  "src": "138:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "138:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_clientID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12,
                  "src": "160:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "160:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12,
                  "src": "179:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "179:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "137:55:0"
            },
            "src": "117:76:0"
          },
          {
            "body": {
              "id": 24,
              "nodeType": "Block",
              "src": "321:48:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 19,
                        "name": "clientMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1112,
                        "src": "338:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Client_$1056_storage_$",
                          "typeString": "mapping(string memory => struct Password.Client storage ref)"
                        }
                      },
                      "id": 21,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 20,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "348:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "338:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Client_$1056_storage",
                        "typeString": "struct Password.Client storage ref"
                      }
                    },
                    "id": 22,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "clientID",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1051,
                    "src": "338:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 18,
                  "id": 23,
                  "nodeType": "Return",
                  "src": "331:31:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "0f3aef01",
            "id": 25,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getClientNameFromMap",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 15,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 25,
                  "src": "229:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 13,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "229:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "228:20:0"
            },
            "returnParameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17,
                  "mutability": "mutable",
                  "name": "clientAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 25,
                  "src": "294:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "294:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "293:23:0"
            },
            "scope": 232,
            "src": "199:170:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 38,
              "nodeType": "Block",
              "src": "513:52:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 34,
                      "name": "userClientIDMap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1108,
                      "src": "530:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 36,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 35,
                      "name": "userAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "546:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "530:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 33,
                  "id": 37,
                  "nodeType": "Return",
                  "src": "523:35:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "e3314354",
            "id": 39,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 30,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 29,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1496,
                  "src": "462:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "462:11:0"
              }
            ],
            "name": "getClientIDFromIDMap",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27,
                  "mutability": "mutable",
                  "name": "userAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 39,
                  "src": "405:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "405:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "404:21:0"
            },
            "returnParameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32,
                  "mutability": "mutable",
                  "name": "clientID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 39,
                  "src": "491:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "491:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "490:18:0"
            },
            "scope": 232,
            "src": "375:190:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 136,
              "nodeType": "Block",
              "src": "1241:632:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 69,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 64,
                          "name": "clientMap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1112,
                          "src": "1251:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Client_$1056_storage_$",
                            "typeString": "mapping(string memory => struct Password.Client storage ref)"
                          }
                        },
                        "id": 66,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 65,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "1261:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1251:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Client_$1056_storage",
                          "typeString": "struct Password.Client storage ref"
                        }
                      },
                      "id": 67,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "clientID",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1051,
                      "src": "1251:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 68,
                      "name": "_clientID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "1279:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1251:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 70,
                  "nodeType": "ExpressionStatement",
                  "src": "1251:37:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 71,
                          "name": "clientMap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1112,
                          "src": "1298:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Client_$1056_storage_$",
                            "typeString": "mapping(string memory => struct Password.Client storage ref)"
                          }
                        },
                        "id": 73,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 72,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "1308:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1298:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Client_$1056_storage",
                          "typeString": "struct Password.Client storage ref"
                        }
                      },
                      "id": 74,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1053,
                      "src": "1298:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 75,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "1322:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1298:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 77,
                  "nodeType": "ExpressionStatement",
                  "src": "1298:29:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 83,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 78,
                          "name": "clientMap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1112,
                          "src": "1337:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Client_$1056_storage_$",
                            "typeString": "mapping(string memory => struct Password.Client storage ref)"
                          }
                        },
                        "id": 80,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 79,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "1347:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1337:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Client_$1056_storage",
                          "typeString": "struct Password.Client storage ref"
                        }
                      },
                      "id": 81,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "flag",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1055,
                      "src": "1337:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 82,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1361:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1337:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 84,
                  "nodeType": "ExpressionStatement",
                  "src": "1337:28:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 85,
                        "name": "userClientIDMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1108,
                        "src": "1420:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 87,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 86,
                        "name": "_userAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "1436:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1420:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "307830",
                          "id": 90,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1461:3:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 89,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1453:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 88,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1453:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 91,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1453:12:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1420:45:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 100,
                  "nodeType": "IfStatement",
                  "src": "1416:115:0",
                  "trueBody": {
                    "id": 99,
                    "nodeType": "Block",
                    "src": "1467:64:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 97,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 93,
                              "name": "userClientIDMap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1108,
                              "src": "1479:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 95,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 94,
                              "name": "_userAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42,
                              "src": "1495:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1479:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 96,
                            "name": "_clientID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46,
                            "src": "1511:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1479:41:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 98,
                        "nodeType": "ExpressionStatement",
                        "src": "1479:41:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 101,
                        "name": "clientNameAddressMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1116,
                        "src": "1541:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 103,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 102,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "1562:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1541:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 104,
                      "name": "_clientID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "1571:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1541:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 106,
                  "nodeType": "ExpressionStatement",
                  "src": "1541:39:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 107,
                        "name": "userClientIDMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1108,
                        "src": "1638:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 109,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 108,
                        "name": "_userAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "1654:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1638:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 110,
                      "name": "_clientID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "1670:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1638:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 112,
                  "nodeType": "ExpressionStatement",
                  "src": "1638:41:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 118,
                            "name": "_clientID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46,
                            "src": "1733:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 119,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48,
                            "src": "1744:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 120,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1751:4:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 117,
                          "name": "Client",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1056,
                          "src": "1726:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Client_$1056_storage_ptr_$",
                            "typeString": "type(struct Password.Client storage pointer)"
                          }
                        },
                        "id": 121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1726:30:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Client_$1056_memory_ptr",
                          "typeString": "struct Password.Client memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Client_$1056_memory_ptr",
                          "typeString": "struct Password.Client memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 113,
                          "name": "usersToClientsMap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1121,
                          "src": "1689:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Client_$1056_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct Password.Client storage ref[] storage ref)"
                          }
                        },
                        "id": 115,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 114,
                          "name": "_userAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42,
                          "src": "1707:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1689:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Client_$1056_storage_$dyn_storage",
                          "typeString": "struct Password.Client storage ref[] storage ref"
                        }
                      },
                      "id": 116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1689:36:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Client_$1056_storage_$returns$__$",
                        "typeString": "function (struct Password.Client storage ref)"
                      }
                    },
                    "id": 122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1689:68:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 123,
                  "nodeType": "ExpressionStatement",
                  "src": "1689:68:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 124,
                        "name": "userToNumClientsMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1125,
                        "src": "1767:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
                          "typeString": "mapping(address => int256)"
                        }
                      },
                      "id": 126,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 125,
                        "name": "_userAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "1787:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1767:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1804:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1767:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 129,
                  "nodeType": "ExpressionStatement",
                  "src": "1767:38:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 131,
                        "name": "_userAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "1835:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 132,
                        "name": "_clientID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "1849:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 133,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "1860:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 130,
                      "name": "addClientEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "1820:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory)"
                      }
                    },
                    "id": 134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1820:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135,
                  "nodeType": "EmitStatement",
                  "src": "1815:51:0"
                }
              ]
            },
            "documentation": {
              "id": 40,
              "nodeType": "StructuredDocumentation",
              "src": "571:373:0",
              "text": "@author Denis M. Putnam\n @notice Add a client to this contract.\n @param _userAddress user address\n @param _pwd plain text user password\n @param _clientID address of the wallet of the client.\n @param _name string with the client's name.  This needs to be unique\n @dev Add's a client to the clientMap and the clientNameAddressMap"
            },
            "functionSelector": "d79fca3d",
            "id": 137,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 51,
                    "name": "_userAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 42,
                    "src": "1120:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 52,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 48,
                    "src": "1134:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 53,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 50,
                  "name": "userOnly",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1246,
                  "src": "1111:8:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$_t_string_memory_ptr_$",
                    "typeString": "modifier (address,string memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1111:29:0"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 55,
                    "name": "_userAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 42,
                    "src": "1165:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 56,
                    "name": "_pwd",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 44,
                    "src": "1179:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 57,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 54,
                  "name": "isValidPassword",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1152,
                  "src": "1149:15:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$_t_string_memory_ptr_$",
                    "typeString": "modifier (address,string memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1149:35:0"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 59,
                    "name": "_userAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 42,
                    "src": "1205:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 60,
                    "name": "_clientID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 46,
                    "src": "1219:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 61,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 48,
                    "src": "1230:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 62,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 58,
                  "name": "noDupClient",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1222,
                  "src": "1193:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$_t_address_$_t_string_memory_ptr_$",
                    "typeString": "modifier (address,address,string memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1193:43:0"
              }
            ],
            "name": "addClient",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42,
                  "mutability": "mutable",
                  "name": "_userAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 137,
                  "src": "977:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "977:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44,
                  "mutability": "mutable",
                  "name": "_pwd",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 137,
                  "src": "1007:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1007:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46,
                  "mutability": "mutable",
                  "name": "_clientID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 137,
                  "src": "1035:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1035:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 137,
                  "src": "1062:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1062:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "967:120:0"
            },
            "returnParameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1241:0:0"
            },
            "scope": 232,
            "src": "949:924:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 177,
              "nodeType": "Block",
              "src": "2483:150:0",
              "statements": [
                {
                  "assignments": [
                    160
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 160,
                      "mutability": "mutable",
                      "name": "lname",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 177,
                      "src": "2493:19:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 159,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2493:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 165,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 161,
                        "name": "clientMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1112,
                        "src": "2515:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Client_$1056_storage_$",
                          "typeString": "mapping(string memory => struct Password.Client storage ref)"
                        }
                      },
                      "id": 163,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 162,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 144,
                        "src": "2525:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2515:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Client_$1056_storage",
                        "typeString": "struct Password.Client storage ref"
                      }
                    },
                    "id": 164,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "name",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1053,
                    "src": "2515:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2493:43:0"
                },
                {
                  "assignments": [
                    167
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 167,
                      "mutability": "mutable",
                      "name": "lclientID",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 177,
                      "src": "2546:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 166,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2546:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 172,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 168,
                        "name": "clientMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1112,
                        "src": "2566:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Client_$1056_storage_$",
                          "typeString": "mapping(string memory => struct Password.Client storage ref)"
                        }
                      },
                      "id": 170,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 169,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 144,
                        "src": "2576:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2566:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Client_$1056_storage",
                        "typeString": "struct Password.Client storage ref"
                      }
                    },
                    "id": 171,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "clientID",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1051,
                    "src": "2566:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2546:45:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 173,
                        "name": "lname",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 160,
                        "src": "2609:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 174,
                        "name": "lclientID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 167,
                        "src": "2616:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "id": 175,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2608:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_address_$",
                      "typeString": "tuple(string memory,address)"
                    }
                  },
                  "functionReturnParameters": 158,
                  "id": 176,
                  "nodeType": "Return",
                  "src": "2601:25:0"
                }
              ]
            },
            "documentation": {
              "id": 138,
              "nodeType": "StructuredDocumentation",
              "src": "1879:278:0",
              "text": "@author Denis M. Putnam\n @notice Get the requested client\n @param _userAddress user address\n @param _pwd plain text password\n @param _name client's name\n @dev Get the client for the given name.\n @return name\n @return clientID"
            },
            "functionSelector": "d41ba10f",
            "id": 178,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 147,
                    "name": "_userAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 140,
                    "src": "2325:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 148,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 144,
                    "src": "2339:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 149,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 146,
                  "name": "userOnly",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1246,
                  "src": "2316:8:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$_t_string_memory_ptr_$",
                    "typeString": "modifier (address,string memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2316:29:0"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 151,
                    "name": "_userAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 140,
                    "src": "2370:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 152,
                    "name": "_pwd",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 142,
                    "src": "2384:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 153,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 150,
                  "name": "isValidPassword",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1152,
                  "src": "2354:15:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$_t_string_memory_ptr_$",
                    "typeString": "modifier (address,string memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2354:35:0"
              }
            ],
            "name": "getClientByName",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 145,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 140,
                  "mutability": "mutable",
                  "name": "_userAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 178,
                  "src": "2196:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 139,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2196:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 142,
                  "mutability": "mutable",
                  "name": "_pwd",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 178,
                  "src": "2226:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 141,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2226:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 144,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 178,
                  "src": "2254:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 143,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2254:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2186:93:0"
            },
            "returnParameters": {
              "id": 158,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 155,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 178,
                  "src": "2420:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 154,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2420:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 157,
                  "mutability": "mutable",
                  "name": "clientID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 178,
                  "src": "2452:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 156,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2452:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2406:72:0"
            },
            "scope": 232,
            "src": "2162:471:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 218,
              "nodeType": "Block",
              "src": "3166:205:0",
              "statements": [
                {
                  "assignments": [
                    197
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 197,
                      "mutability": "mutable",
                      "name": "_client",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 218,
                      "src": "3176:21:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Client_$1056_memory_ptr",
                        "typeString": "struct Password.Client"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 196,
                        "name": "Client",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1056,
                        "src": "3176:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Client_$1056_storage_ptr",
                          "typeString": "struct Password.Client"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 203,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 198,
                        "name": "usersToClientsMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1121,
                        "src": "3200:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Client_$1056_storage_$dyn_storage_$",
                          "typeString": "mapping(address => struct Password.Client storage ref[] storage ref)"
                        }
                      },
                      "id": 200,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 199,
                        "name": "_userAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 181,
                        "src": "3218:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3200:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Client_$1056_storage_$dyn_storage",
                        "typeString": "struct Password.Client storage ref[] storage ref"
                      }
                    },
                    "id": 202,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 201,
                      "name": "_index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 185,
                      "src": "3232:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3200:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Client_$1056_storage",
                      "typeString": "struct Password.Client storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3176:63:0"
                },
                {
                  "assignments": [
                    205
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 205,
                      "mutability": "mutable",
                      "name": "lname",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 218,
                      "src": "3249:19:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 204,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "3249:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 208,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 206,
                      "name": "_client",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 197,
                      "src": "3271:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Client_$1056_memory_ptr",
                        "typeString": "struct Password.Client memory"
                      }
                    },
                    "id": 207,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "name",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1053,
                    "src": "3271:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3249:34:0"
                },
                {
                  "assignments": [
                    210
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 210,
                      "mutability": "mutable",
                      "name": "lclientID",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 218,
                      "src": "3293:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 209,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3293:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 213,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 211,
                      "name": "_client",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 197,
                      "src": "3313:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Client_$1056_memory_ptr",
                        "typeString": "struct Password.Client memory"
                      }
                    },
                    "id": 212,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "clientID",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1051,
                    "src": "3313:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3293:36:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 214,
                        "name": "lname",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 205,
                        "src": "3347:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 215,
                        "name": "lclientID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 210,
                        "src": "3354:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "id": 216,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3346:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_address_$",
                      "typeString": "tuple(string memory,address)"
                    }
                  },
                  "functionReturnParameters": 195,
                  "id": 217,
                  "nodeType": "Return",
                  "src": "3339:25:0"
                }
              ]
            },
            "documentation": {
              "id": 179,
              "nodeType": "StructuredDocumentation",
              "src": "2639:243:0",
              "text": "@author Denis M. Putnam\n @notice get the client by index number.\n @param _userAddress user account address.\n @param _index index of client name\n @dev no further info\n @return name\n @return clientID"
            },
            "functionSelector": "b5b73acb",
            "id": 219,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 188,
                    "name": "_userAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 181,
                    "src": "3053:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 189,
                    "name": "_pwd",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 183,
                    "src": "3067:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 190,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 187,
                  "name": "isValidPassword",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1152,
                  "src": "3037:15:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$_t_string_memory_ptr_$",
                    "typeString": "modifier (address,string memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3037:35:0"
              }
            ],
            "name": "getClientByIndex",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 186,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 181,
                  "mutability": "mutable",
                  "name": "_userAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 219,
                  "src": "2922:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 180,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2922:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 183,
                  "mutability": "mutable",
                  "name": "_pwd",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 219,
                  "src": "2952:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 182,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2952:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 185,
                  "mutability": "mutable",
                  "name": "_index",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 219,
                  "src": "2980:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 184,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2980:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2912:88:0"
            },
            "returnParameters": {
              "id": 195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 192,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 219,
                  "src": "3103:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 191,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3103:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 194,
                  "mutability": "mutable",
                  "name": "clientID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 219,
                  "src": "3135:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 193,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3135:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3089:72:0"
            },
            "scope": 232,
            "src": "2887:484:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 230,
              "nodeType": "Block",
              "src": "3486:98:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 226,
                      "name": "userToNumClientsMap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1125,
                      "src": "3544:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
                        "typeString": "mapping(address => int256)"
                      }
                    },
                    "id": 228,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 227,
                      "name": "_userAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 221,
                      "src": "3564:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3544:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 225,
                  "id": 229,
                  "nodeType": "Return",
                  "src": "3537:40:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "a426e2d9",
            "id": 231,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getClientCount",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 221,
                  "mutability": "mutable",
                  "name": "_userAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 231,
                  "src": "3401:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 220,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3401:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3400:22:0"
            },
            "returnParameters": {
              "id": 225,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 224,
                  "mutability": "mutable",
                  "name": "count",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 231,
                  "src": "3468:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 223,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3468:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3467:14:0"
            },
            "scope": 232,
            "src": "3377:207:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 233,
        "src": "84:3502:0"
      }
    ],
    "src": "36:3551:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/denisputnam/git/invoice-tracker-dapp/contracts/Clients.sol",
    "exportedSymbols": {
      "Clients": [
        232
      ]
    },
    "id": 233,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:23:0"
      },
      {
        "absolutePath": "/Users/denisputnam/git/invoice-tracker-dapp/contracts/Users.sol",
        "file": "./Users.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 233,
        "sourceUnit": 1416,
        "src": "61:21:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "Users",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1415,
              "src": "104:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Users_$1415",
                "typeString": "contract Users"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "104:5:0"
          }
        ],
        "contractDependencies": [
          1290,
          1415,
          1438,
          1547
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 232,
        "linearizedBaseContracts": [
          232,
          1415,
          1290,
          1547,
          1438
        ],
        "name": "Clients",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 12,
            "name": "addClientEvent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_userAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12,
                  "src": "138:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "138:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_clientID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12,
                  "src": "160:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "160:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12,
                  "src": "179:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "179:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "137:55:0"
            },
            "src": "117:76:0"
          },
          {
            "body": {
              "id": 24,
              "nodeType": "Block",
              "src": "321:48:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 19,
                        "name": "clientMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1112,
                        "src": "338:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Client_$1056_storage_$",
                          "typeString": "mapping(string memory => struct Password.Client storage ref)"
                        }
                      },
                      "id": 21,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 20,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "348:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "338:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Client_$1056_storage",
                        "typeString": "struct Password.Client storage ref"
                      }
                    },
                    "id": 22,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "clientID",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1051,
                    "src": "338:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 18,
                  "id": 23,
                  "nodeType": "Return",
                  "src": "331:31:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "0f3aef01",
            "id": 25,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getClientNameFromMap",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 15,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 25,
                  "src": "229:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 13,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "229:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "228:20:0"
            },
            "returnParameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17,
                  "mutability": "mutable",
                  "name": "clientAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 25,
                  "src": "294:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "294:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "293:23:0"
            },
            "scope": 232,
            "src": "199:170:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 38,
              "nodeType": "Block",
              "src": "513:52:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 34,
                      "name": "userClientIDMap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1108,
                      "src": "530:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 36,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 35,
                      "name": "userAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "546:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "530:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 33,
                  "id": 37,
                  "nodeType": "Return",
                  "src": "523:35:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "e3314354",
            "id": 39,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 30,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 29,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1496,
                  "src": "462:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "462:11:0"
              }
            ],
            "name": "getClientIDFromIDMap",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27,
                  "mutability": "mutable",
                  "name": "userAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 39,
                  "src": "405:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "405:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "404:21:0"
            },
            "returnParameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32,
                  "mutability": "mutable",
                  "name": "clientID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 39,
                  "src": "491:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "491:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "490:18:0"
            },
            "scope": 232,
            "src": "375:190:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 136,
              "nodeType": "Block",
              "src": "1241:632:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 69,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 64,
                          "name": "clientMap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1112,
                          "src": "1251:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Client_$1056_storage_$",
                            "typeString": "mapping(string memory => struct Password.Client storage ref)"
                          }
                        },
                        "id": 66,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 65,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "1261:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1251:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Client_$1056_storage",
                          "typeString": "struct Password.Client storage ref"
                        }
                      },
                      "id": 67,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "clientID",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1051,
                      "src": "1251:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 68,
                      "name": "_clientID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "1279:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1251:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 70,
                  "nodeType": "ExpressionStatement",
                  "src": "1251:37:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 71,
                          "name": "clientMap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1112,
                          "src": "1298:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Client_$1056_storage_$",
                            "typeString": "mapping(string memory => struct Password.Client storage ref)"
                          }
                        },
                        "id": 73,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 72,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "1308:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1298:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Client_$1056_storage",
                          "typeString": "struct Password.Client storage ref"
                        }
                      },
                      "id": 74,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1053,
                      "src": "1298:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 75,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "1322:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1298:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 77,
                  "nodeType": "ExpressionStatement",
                  "src": "1298:29:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 83,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 78,
                          "name": "clientMap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1112,
                          "src": "1337:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Client_$1056_storage_$",
                            "typeString": "mapping(string memory => struct Password.Client storage ref)"
                          }
                        },
                        "id": 80,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 79,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "1347:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1337:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Client_$1056_storage",
                          "typeString": "struct Password.Client storage ref"
                        }
                      },
                      "id": 81,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "flag",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1055,
                      "src": "1337:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 82,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1361:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1337:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 84,
                  "nodeType": "ExpressionStatement",
                  "src": "1337:28:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 85,
                        "name": "userClientIDMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1108,
                        "src": "1420:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 87,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 86,
                        "name": "_userAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "1436:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1420:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "307830",
                          "id": 90,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1461:3:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 89,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1453:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 88,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1453:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 91,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1453:12:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1420:45:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 100,
                  "nodeType": "IfStatement",
                  "src": "1416:115:0",
                  "trueBody": {
                    "id": 99,
                    "nodeType": "Block",
                    "src": "1467:64:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 97,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 93,
                              "name": "userClientIDMap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1108,
                              "src": "1479:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 95,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 94,
                              "name": "_userAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42,
                              "src": "1495:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1479:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 96,
                            "name": "_clientID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46,
                            "src": "1511:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1479:41:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 98,
                        "nodeType": "ExpressionStatement",
                        "src": "1479:41:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 101,
                        "name": "clientNameAddressMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1116,
                        "src": "1541:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 103,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 102,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "1562:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1541:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 104,
                      "name": "_clientID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "1571:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1541:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 106,
                  "nodeType": "ExpressionStatement",
                  "src": "1541:39:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 107,
                        "name": "userClientIDMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1108,
                        "src": "1638:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 109,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 108,
                        "name": "_userAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "1654:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1638:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 110,
                      "name": "_clientID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "1670:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1638:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 112,
                  "nodeType": "ExpressionStatement",
                  "src": "1638:41:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 118,
                            "name": "_clientID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46,
                            "src": "1733:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 119,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48,
                            "src": "1744:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 120,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1751:4:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 117,
                          "name": "Client",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1056,
                          "src": "1726:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Client_$1056_storage_ptr_$",
                            "typeString": "type(struct Password.Client storage pointer)"
                          }
                        },
                        "id": 121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1726:30:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Client_$1056_memory_ptr",
                          "typeString": "struct Password.Client memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Client_$1056_memory_ptr",
                          "typeString": "struct Password.Client memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 113,
                          "name": "usersToClientsMap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1121,
                          "src": "1689:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Client_$1056_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct Password.Client storage ref[] storage ref)"
                          }
                        },
                        "id": 115,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 114,
                          "name": "_userAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42,
                          "src": "1707:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1689:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Client_$1056_storage_$dyn_storage",
                          "typeString": "struct Password.Client storage ref[] storage ref"
                        }
                      },
                      "id": 116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1689:36:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Client_$1056_storage_$returns$__$",
                        "typeString": "function (struct Password.Client storage ref)"
                      }
                    },
                    "id": 122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1689:68:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 123,
                  "nodeType": "ExpressionStatement",
                  "src": "1689:68:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 124,
                        "name": "userToNumClientsMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1125,
                        "src": "1767:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
                          "typeString": "mapping(address => int256)"
                        }
                      },
                      "id": 126,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 125,
                        "name": "_userAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "1787:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1767:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1804:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1767:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 129,
                  "nodeType": "ExpressionStatement",
                  "src": "1767:38:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 131,
                        "name": "_userAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "1835:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 132,
                        "name": "_clientID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "1849:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 133,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "1860:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 130,
                      "name": "addClientEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "1820:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory)"
                      }
                    },
                    "id": 134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1820:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135,
                  "nodeType": "EmitStatement",
                  "src": "1815:51:0"
                }
              ]
            },
            "documentation": {
              "id": 40,
              "nodeType": "StructuredDocumentation",
              "src": "571:373:0",
              "text": "@author Denis M. Putnam\n @notice Add a client to this contract.\n @param _userAddress user address\n @param _pwd plain text user password\n @param _clientID address of the wallet of the client.\n @param _name string with the client's name.  This needs to be unique\n @dev Add's a client to the clientMap and the clientNameAddressMap"
            },
            "functionSelector": "d79fca3d",
            "id": 137,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 51,
                    "name": "_userAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 42,
                    "src": "1120:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 52,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 48,
                    "src": "1134:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 53,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 50,
                  "name": "userOnly",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1246,
                  "src": "1111:8:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$_t_string_memory_ptr_$",
                    "typeString": "modifier (address,string memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1111:29:0"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 55,
                    "name": "_userAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 42,
                    "src": "1165:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 56,
                    "name": "_pwd",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 44,
                    "src": "1179:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 57,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 54,
                  "name": "isValidPassword",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1152,
                  "src": "1149:15:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$_t_string_memory_ptr_$",
                    "typeString": "modifier (address,string memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1149:35:0"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 59,
                    "name": "_userAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 42,
                    "src": "1205:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 60,
                    "name": "_clientID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 46,
                    "src": "1219:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 61,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 48,
                    "src": "1230:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 62,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 58,
                  "name": "noDupClient",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1222,
                  "src": "1193:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$_t_address_$_t_string_memory_ptr_$",
                    "typeString": "modifier (address,address,string memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1193:43:0"
              }
            ],
            "name": "addClient",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42,
                  "mutability": "mutable",
                  "name": "_userAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 137,
                  "src": "977:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "977:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44,
                  "mutability": "mutable",
                  "name": "_pwd",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 137,
                  "src": "1007:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1007:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46,
                  "mutability": "mutable",
                  "name": "_clientID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 137,
                  "src": "1035:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1035:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 137,
                  "src": "1062:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1062:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "967:120:0"
            },
            "returnParameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1241:0:0"
            },
            "scope": 232,
            "src": "949:924:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 177,
              "nodeType": "Block",
              "src": "2483:150:0",
              "statements": [
                {
                  "assignments": [
                    160
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 160,
                      "mutability": "mutable",
                      "name": "lname",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 177,
                      "src": "2493:19:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 159,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2493:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 165,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 161,
                        "name": "clientMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1112,
                        "src": "2515:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Client_$1056_storage_$",
                          "typeString": "mapping(string memory => struct Password.Client storage ref)"
                        }
                      },
                      "id": 163,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 162,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 144,
                        "src": "2525:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2515:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Client_$1056_storage",
                        "typeString": "struct Password.Client storage ref"
                      }
                    },
                    "id": 164,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "name",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1053,
                    "src": "2515:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2493:43:0"
                },
                {
                  "assignments": [
                    167
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 167,
                      "mutability": "mutable",
                      "name": "lclientID",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 177,
                      "src": "2546:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 166,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2546:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 172,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 168,
                        "name": "clientMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1112,
                        "src": "2566:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Client_$1056_storage_$",
                          "typeString": "mapping(string memory => struct Password.Client storage ref)"
                        }
                      },
                      "id": 170,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 169,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 144,
                        "src": "2576:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2566:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Client_$1056_storage",
                        "typeString": "struct Password.Client storage ref"
                      }
                    },
                    "id": 171,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "clientID",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1051,
                    "src": "2566:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2546:45:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 173,
                        "name": "lname",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 160,
                        "src": "2609:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 174,
                        "name": "lclientID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 167,
                        "src": "2616:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "id": 175,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2608:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_address_$",
                      "typeString": "tuple(string memory,address)"
                    }
                  },
                  "functionReturnParameters": 158,
                  "id": 176,
                  "nodeType": "Return",
                  "src": "2601:25:0"
                }
              ]
            },
            "documentation": {
              "id": 138,
              "nodeType": "StructuredDocumentation",
              "src": "1879:278:0",
              "text": "@author Denis M. Putnam\n @notice Get the requested client\n @param _userAddress user address\n @param _pwd plain text password\n @param _name client's name\n @dev Get the client for the given name.\n @return name\n @return clientID"
            },
            "functionSelector": "d41ba10f",
            "id": 178,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 147,
                    "name": "_userAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 140,
                    "src": "2325:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 148,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 144,
                    "src": "2339:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 149,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 146,
                  "name": "userOnly",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1246,
                  "src": "2316:8:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$_t_string_memory_ptr_$",
                    "typeString": "modifier (address,string memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2316:29:0"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 151,
                    "name": "_userAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 140,
                    "src": "2370:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 152,
                    "name": "_pwd",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 142,
                    "src": "2384:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 153,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 150,
                  "name": "isValidPassword",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1152,
                  "src": "2354:15:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$_t_string_memory_ptr_$",
                    "typeString": "modifier (address,string memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2354:35:0"
              }
            ],
            "name": "getClientByName",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 145,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 140,
                  "mutability": "mutable",
                  "name": "_userAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 178,
                  "src": "2196:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 139,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2196:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 142,
                  "mutability": "mutable",
                  "name": "_pwd",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 178,
                  "src": "2226:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 141,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2226:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 144,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 178,
                  "src": "2254:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 143,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2254:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2186:93:0"
            },
            "returnParameters": {
              "id": 158,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 155,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 178,
                  "src": "2420:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 154,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2420:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 157,
                  "mutability": "mutable",
                  "name": "clientID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 178,
                  "src": "2452:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 156,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2452:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2406:72:0"
            },
            "scope": 232,
            "src": "2162:471:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 218,
              "nodeType": "Block",
              "src": "3166:205:0",
              "statements": [
                {
                  "assignments": [
                    197
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 197,
                      "mutability": "mutable",
                      "name": "_client",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 218,
                      "src": "3176:21:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Client_$1056_memory_ptr",
                        "typeString": "struct Password.Client"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 196,
                        "name": "Client",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1056,
                        "src": "3176:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Client_$1056_storage_ptr",
                          "typeString": "struct Password.Client"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 203,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 198,
                        "name": "usersToClientsMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1121,
                        "src": "3200:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Client_$1056_storage_$dyn_storage_$",
                          "typeString": "mapping(address => struct Password.Client storage ref[] storage ref)"
                        }
                      },
                      "id": 200,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 199,
                        "name": "_userAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 181,
                        "src": "3218:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3200:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Client_$1056_storage_$dyn_storage",
                        "typeString": "struct Password.Client storage ref[] storage ref"
                      }
                    },
                    "id": 202,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 201,
                      "name": "_index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 185,
                      "src": "3232:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3200:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Client_$1056_storage",
                      "typeString": "struct Password.Client storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3176:63:0"
                },
                {
                  "assignments": [
                    205
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 205,
                      "mutability": "mutable",
                      "name": "lname",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 218,
                      "src": "3249:19:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 204,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "3249:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 208,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 206,
                      "name": "_client",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 197,
                      "src": "3271:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Client_$1056_memory_ptr",
                        "typeString": "struct Password.Client memory"
                      }
                    },
                    "id": 207,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "name",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1053,
                    "src": "3271:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3249:34:0"
                },
                {
                  "assignments": [
                    210
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 210,
                      "mutability": "mutable",
                      "name": "lclientID",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 218,
                      "src": "3293:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 209,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3293:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 213,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 211,
                      "name": "_client",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 197,
                      "src": "3313:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Client_$1056_memory_ptr",
                        "typeString": "struct Password.Client memory"
                      }
                    },
                    "id": 212,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "clientID",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1051,
                    "src": "3313:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3293:36:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 214,
                        "name": "lname",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 205,
                        "src": "3347:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 215,
                        "name": "lclientID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 210,
                        "src": "3354:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "id": 216,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3346:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_address_$",
                      "typeString": "tuple(string memory,address)"
                    }
                  },
                  "functionReturnParameters": 195,
                  "id": 217,
                  "nodeType": "Return",
                  "src": "3339:25:0"
                }
              ]
            },
            "documentation": {
              "id": 179,
              "nodeType": "StructuredDocumentation",
              "src": "2639:243:0",
              "text": "@author Denis M. Putnam\n @notice get the client by index number.\n @param _userAddress user account address.\n @param _index index of client name\n @dev no further info\n @return name\n @return clientID"
            },
            "functionSelector": "b5b73acb",
            "id": 219,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 188,
                    "name": "_userAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 181,
                    "src": "3053:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 189,
                    "name": "_pwd",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 183,
                    "src": "3067:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 190,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 187,
                  "name": "isValidPassword",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1152,
                  "src": "3037:15:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$_t_string_memory_ptr_$",
                    "typeString": "modifier (address,string memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3037:35:0"
              }
            ],
            "name": "getClientByIndex",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 186,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 181,
                  "mutability": "mutable",
                  "name": "_userAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 219,
                  "src": "2922:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 180,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2922:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 183,
                  "mutability": "mutable",
                  "name": "_pwd",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 219,
                  "src": "2952:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 182,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2952:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 185,
                  "mutability": "mutable",
                  "name": "_index",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 219,
                  "src": "2980:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 184,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2980:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2912:88:0"
            },
            "returnParameters": {
              "id": 195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 192,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 219,
                  "src": "3103:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 191,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3103:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 194,
                  "mutability": "mutable",
                  "name": "clientID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 219,
                  "src": "3135:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 193,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3135:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3089:72:0"
            },
            "scope": 232,
            "src": "2887:484:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 230,
              "nodeType": "Block",
              "src": "3486:98:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 226,
                      "name": "userToNumClientsMap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1125,
                      "src": "3544:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
                        "typeString": "mapping(address => int256)"
                      }
                    },
                    "id": 228,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 227,
                      "name": "_userAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 221,
                      "src": "3564:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3544:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 225,
                  "id": 229,
                  "nodeType": "Return",
                  "src": "3537:40:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "a426e2d9",
            "id": 231,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getClientCount",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 221,
                  "mutability": "mutable",
                  "name": "_userAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 231,
                  "src": "3401:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 220,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3401:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3400:22:0"
            },
            "returnParameters": {
              "id": 225,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 224,
                  "mutability": "mutable",
                  "name": "count",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 231,
                  "src": "3468:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 223,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3468:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3467:14:0"
            },
            "scope": 232,
            "src": "3377:207:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 233,
        "src": "84:3502:0"
      }
    ],
    "src": "36:3551:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.6+commit.6c089d02.Emscripten.clang"
  },
  "networks": {
    "1596573258274": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0x94b9610dbc7bb1121768f2201c6a4b486d3979ecc0c3e84d475a3ace0381903c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "_userAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "_clientID",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "_name",
              "type": "string"
            }
          ],
          "name": "addClientEvent",
          "type": "event"
        },
        "0x5ae6671f20b51a868ae522f9841ff46bb92cc988a8f2f502deba9d90b8cd8693": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address payable",
              "name": "_address",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "_pwd",
              "type": "string"
            }
          ],
          "name": "addUserEvent",
          "type": "event"
        },
        "0x3266e9973cd88d0b427a9f781262c2810cb85378bdc9e4965a3c7aa22977708e": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "_userAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "_clientID",
              "type": "string"
            }
          ],
          "name": "duplicateClientEvent",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x50efe39001C72586be0BDA0D8BbB6cde42bd78d6",
      "transactionHash": "0x6599cc630ebf46de2f264176bb81adc7b3d15377bac85e08be638e0b7703fa24"
    },
    "1596810373021": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0x94b9610dbc7bb1121768f2201c6a4b486d3979ecc0c3e84d475a3ace0381903c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "_userAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "_clientID",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "_name",
              "type": "string"
            }
          ],
          "name": "addClientEvent",
          "type": "event"
        },
        "0x5ae6671f20b51a868ae522f9841ff46bb92cc988a8f2f502deba9d90b8cd8693": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address payable",
              "name": "_address",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "_pwd",
              "type": "string"
            }
          ],
          "name": "addUserEvent",
          "type": "event"
        },
        "0x3266e9973cd88d0b427a9f781262c2810cb85378bdc9e4965a3c7aa22977708e": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "_userAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "_clientID",
              "type": "string"
            }
          ],
          "name": "duplicateClientEvent",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x074931b2171ECe4899B6AA4686E063C78067B1D0",
      "transactionHash": "0xe01eb95ae8e7164fbe67002cd270a17b4fe3906f27c998da85ad4f08ff3dec9e"
    }
  },
  "schemaVersion": "3.2.3",
  "updatedAt": "2020-08-07T14:30:50.318Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "addClient(address,string,address,string)": {
        "author": "Denis M. Putnam",
        "details": "Add's a client to the clientMap and the clientNameAddressMap",
        "params": {
          "_clientID": "address of the wallet of the client.",
          "_name": "string with the client's name.  This needs to be unique",
          "_pwd": "plain text user password",
          "_userAddress": "user address"
        }
      },
      "addUser(address,string,string)": {
        "author": "Denis M. Putnam",
        "details": "no other details.",
        "params": {
          "_address": "wallet account address for the user",
          "_name": "user name",
          "_pwd": "unencrypted password"
        }
      },
      "calcPassword(string)": {
        "author": "Denis M. Putnam",
        "details": "no other details.",
        "params": {
          "_pwd": "plain text password"
        },
        "returns": {
          "ePwd": "ePwd"
        }
      },
      "getClientByIndex(address,string,uint256)": {
        "author": "Denis M. Putnam",
        "details": "no further info",
        "params": {
          "_index": "index of client name",
          "_userAddress": "user account address."
        },
        "returns": {
          "clientID": "clientID",
          "name": "name"
        }
      },
      "getClientByName(address,string,string)": {
        "author": "Denis M. Putnam",
        "details": "Get the client for the given name.",
        "params": {
          "_name": "client's name",
          "_pwd": "plain text password",
          "_userAddress": "user address"
        },
        "returns": {
          "clientID": "clientID",
          "name": "name"
        }
      },
      "getUser(address)": {
        "author": "Denis M. Putnam",
        "details": "Get the client for the given name.",
        "params": {
          "_userAddress": "user address"
        },
        "returns": {
          "ePwd": "ePwd",
          "name": "name"
        }
      },
      "getUserAddressByIndex(uint256)": {
        "author": "Denis M. Putnam",
        "details": "no other details.",
        "params": {
          "_index": "index of the user"
        },
        "returns": {
          "_userAddress": "_userAddress"
        }
      },
      "getUserCount()": {
        "author": "Denis M. Putnam",
        "details": "no other details.",
        "returns": {
          "usercount": "usercount"
        }
      },
      "getUserName(address)": {
        "author": "Denis M. Putnam",
        "details": "Get the client for the given name.",
        "params": {
          "_userAddress": "user address"
        },
        "returns": {
          "name": "name"
        }
      },
      "isNoClient(address,string,address)": {
        "author": "Denis M. Putnam",
        "details": "no other details.",
        "params": {
          "_clientID": "clients wallet address.",
          "_clientName": "name of the client."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {
      "addClient(address,string,address,string)": {
        "notice": "Add a client to this contract."
      },
      "addUser(address,string,string)": {
        "notice": "Add a user"
      },
      "calcPassword(string)": {
        "notice": "calculate the encrypted password from the given one"
      },
      "getClientByIndex(address,string,uint256)": {
        "notice": "get the client by index number."
      },
      "getClientByName(address,string,string)": {
        "notice": "Get the requested client"
      },
      "getUser(address)": {
        "notice": "Get the user name and epassword"
      },
      "getUserAddressByIndex(uint256)": {
        "notice": "Get the user address"
      },
      "getUserCount()": {
        "notice": "Get the count of users."
      },
      "getUserName(address)": {
        "notice": "Get the user name"
      },
      "isNoClient(address,string,address)": {
        "notice": "Check for no client."
      }
    }
  }
}