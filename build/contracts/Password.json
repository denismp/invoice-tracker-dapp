{
  "contractName": "Password",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_pwd",
          "type": "string"
        }
      ],
      "name": "calcPassword",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "ePwd",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_pwd\",\"type\":\"string\"}],\"name\":\"calcPassword\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"ePwd\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Denis M. Putnam\",\"details\":\"Use at your own risk.\",\"methods\":{},\"title\":\"Passord contract\"},\"userdoc\":{\"methods\":{},\"notice\":\"This contract calculate the encrypted password.\"}},\"settings\":{\"compilationTarget\":{\"/Users/denisputnam/git/invoice-tracker-dapp/contracts/Password.sol\":\"Password\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/denisputnam/git/invoice-tracker-dapp/contracts/Password.sol\":{\"keccak256\":\"0x59b8206bcbbbbf49d15a8e2cf1a3b9aa66e0b9a3945f71336aa425554592f610\",\"urls\":[\"bzz-raw://ab84b102ca99439cbc0e111b6a842bd7a19c66c027a4189d5deaab53015a985d\",\"dweb:/ipfs/QmNPPB9xPcPx2kRNRDPjNa2kSQNnaTzrGLGbUFSHX5dRHJ\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506101b0806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063a69fd72714610030575b600080fd5b6100e96004803603602081101561004657600080fd5b810190808035906020019064010000000081111561006357600080fd5b82018360208201111561007557600080fd5b8035906020019184600183028401116401000000008311171561009757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506100ff565b6040518082815260200191505060405180910390f35b6000816040516020018082805190602001908083835b602083106101385780518252602082019150602081019050602083039250610115565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405160208183030381529060405280519060200120905091905056fea26469706673582212201e90feaeb0c56da015ca63454c72800d081955b647814be93ae59376c8e9007464736f6c63430006060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c8063a69fd72714610030575b600080fd5b6100e96004803603602081101561004657600080fd5b810190808035906020019064010000000081111561006357600080fd5b82018360208201111561007557600080fd5b8035906020019184600183028401116401000000008311171561009757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506100ff565b6040518082815260200191505060405180910390f35b6000816040516020018082805190602001908083835b602083106101385780518252602082019150602081019050602083039250610115565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405160208183030381529060405280519060200120905091905056fea26469706673582212201e90feaeb0c56da015ca63454c72800d081955b647814be93ae59376c8e9007464736f6c63430006060033",
  "immutableReferences": {},
  "sourceMap": "288:188:5:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;288:188:5;;;;;;;",
  "deployedSourceMap": "288:188:5:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;288:188:5;;;;;;;;;;;;;;;;12:1:-1;9;2:12;312:162:5;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;312:162:5;;;;;;;;;;27:11:-1;14;11:28;8:2;;;52:1;49;42:12;8:2;312:162:5;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;312:162:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;312:162:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;312:162:5;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;399:12;461:4;444:22;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;444:22:5;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;444:22:5;;;434:33;;;;;;427:40;;312:162;;;:::o",
  "source": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.6.6;\n\n//import \"@openzeppelin/contracts/access/Ownable.sol\";\n//import \"./Owned.sol\";\n\n/// @title Passord contract\n/// @author Denis M. Putnam\n/// @notice This contract calculate the encrypted password.\n/// @dev Use at your own risk.\ncontract Password {\n    function calcPassword(string memory _pwd)\n        public\n        pure\n        returns (bytes32 ePwd)\n    {\n        return keccak256(abi.encodePacked(_pwd));\n    }\n}\n",
  "sourcePath": "/Users/denisputnam/git/invoice-tracker-dapp/contracts/Password.sol",
  "ast": {
    "absolutePath": "/Users/denisputnam/git/invoice-tracker-dapp/contracts/Password.sol",
    "exportedSymbols": {
      "Password": [
        1081
      ]
    },
    "id": 1082,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1064,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:23:5"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1065,
          "nodeType": "StructuredDocumentation",
          "src": "141:147:5",
          "text": "@title Passord contract\n @author Denis M. Putnam\n @notice This contract calculate the encrypted password.\n @dev Use at your own risk."
        },
        "fullyImplemented": true,
        "id": 1081,
        "linearizedBaseContracts": [
          1081
        ],
        "name": "Password",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1079,
              "nodeType": "Block",
              "src": "417:57:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1075,
                            "name": "_pwd",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1067,
                            "src": "461:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1073,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "444:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1074,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "444:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "444:22:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1072,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "434:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "434:33:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 1071,
                  "id": 1078,
                  "nodeType": "Return",
                  "src": "427:40:5"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "a69fd727",
            "id": 1080,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calcPassword",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1068,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1067,
                  "mutability": "mutable",
                  "name": "_pwd",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1080,
                  "src": "334:18:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1066,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "334:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "333:20:5"
            },
            "returnParameters": {
              "id": 1071,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1070,
                  "mutability": "mutable",
                  "name": "ePwd",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1080,
                  "src": "399:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1069,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "399:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "398:14:5"
            },
            "scope": 1081,
            "src": "312:162:5",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1082,
        "src": "288:188:5"
      }
    ],
    "src": "36:441:5"
  },
  "legacyAST": {
    "absolutePath": "/Users/denisputnam/git/invoice-tracker-dapp/contracts/Password.sol",
    "exportedSymbols": {
      "Password": [
        1081
      ]
    },
    "id": 1082,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1064,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:23:5"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1065,
          "nodeType": "StructuredDocumentation",
          "src": "141:147:5",
          "text": "@title Passord contract\n @author Denis M. Putnam\n @notice This contract calculate the encrypted password.\n @dev Use at your own risk."
        },
        "fullyImplemented": true,
        "id": 1081,
        "linearizedBaseContracts": [
          1081
        ],
        "name": "Password",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1079,
              "nodeType": "Block",
              "src": "417:57:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1075,
                            "name": "_pwd",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1067,
                            "src": "461:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1073,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "444:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1074,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "444:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "444:22:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1072,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "434:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "434:33:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 1071,
                  "id": 1078,
                  "nodeType": "Return",
                  "src": "427:40:5"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "a69fd727",
            "id": 1080,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calcPassword",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1068,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1067,
                  "mutability": "mutable",
                  "name": "_pwd",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1080,
                  "src": "334:18:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1066,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "334:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "333:20:5"
            },
            "returnParameters": {
              "id": 1071,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1070,
                  "mutability": "mutable",
                  "name": "ePwd",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1080,
                  "src": "399:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1069,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "399:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "398:14:5"
            },
            "scope": 1081,
            "src": "312:162:5",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1082,
        "src": "288:188:5"
      }
    ],
    "src": "36:441:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.6+commit.6c089d02.Emscripten.clang"
  },
  "networks": {
    "1596388317369": {
      "events": {},
      "links": {},
      "address": "0xF9D46E4fa970461eb7db6163B563b4a92Af68A20",
      "transactionHash": "0x9327d503819fc83c594f84defcb75214f644ac1cc6ae27b7e78aac59d3772230"
    },
    "1596485124048": {
      "events": {},
      "links": {},
      "address": "0xDB1fb716a3866F1c3Cf2CeE2fbD9dC680DBCb9fC",
      "transactionHash": "0x5224f716092a88a3f570d68bf1fbf070194e5291a029ead6459e74d7ed9a3d6a"
    }
  },
  "schemaVersion": "3.2.3",
  "updatedAt": "2020-08-04T08:37:53.735Z",
  "devdoc": {
    "author": "Denis M. Putnam",
    "details": "Use at your own risk.",
    "methods": {},
    "title": "Passord contract"
  },
  "userdoc": {
    "methods": {},
    "notice": "This contract calculate the encrypted password."
  }
}